0:00 hi everyone welcome to our event this
0:01 event is brought to you by datadog slab
0:03 which is a community of people who love
0:04 data
0:06 and if you want to find
0:08 out more about the events we have so
0:10 there is a link in the description go
0:12 check it out click on this and you'll
0:14 see all the events we have planned now
0:16 there is already quite a few events for
0:18 september
0:19 um so no august it's august right next
0:22 month so check it out
0:24 then yeah if you haven't subscribed for
0:26 our to our youtube channel for some
0:28 reasons please do it now you will not
0:30 regret this is a great channel with a
0:32 lot of videos like this one we have
0:33 today so subscribe to make sure you
0:36 don't miss them
0:37 and we have an amazing community you are
0:39 totally missing out if you are not there
0:42 so
0:42 now check it out join it and talk to
0:45 other dating disasters
0:47 um yeah so a little bit i don't know
0:49 what happened with these arrows but we
0:52 are going to have a course song soon so
0:54 this course is going to be about the
0:55 basics of machine learning engineering
0:57 so there is a link in the description
0:59 you can check it out as well if you're
1:00 interested in learning more about this
1:02 and finally during today's interview you
1:04 can ask any question you want there is a
1:07 link a pin linked in the live chat so
1:09 click on this link
1:10 ask your question and i will be covering
1:12 these questions during the interview
1:14 i think that's the last slide
1:16 yeah
1:18 um okay so now what i will do i will
1:22 open the questions i prepared for you
1:24 danny and
1:27 i have usually i have on one half of my
1:29 screen the questions on the other half
1:31 of the screen
1:33 zoom
1:34 so now i opened it
1:37 and yeah are you ready to start
1:39 yeah as soon as you are
1:41 i mean as soon as you're feeling like
1:43 your english is good enough again which
1:44 i i think it's been going fine
1:46 yeah okay
1:47 well we can try you can try asking me
1:49 some questions in russian and we'll see
1:50 if i can answer it okay maybe we will uh
1:53 keep this for the end
1:55 okay so uh this week we'll talk about
1:58 being an envelopes architect and we have
2:01 a special guest today danny denny and i
2:03 met more than one year ago and slightly
2:06 more i guess and i wasn't sure who that
2:08 guy was and who what he wanted from me i
2:10 thought he was trying to sell me
2:12 something and
2:13 he actually did try to sell me something
2:16 but yeah so we then interacted more and
2:18 more and over time i realized that danny
2:20 is not
2:21 like danny is quite a technical person
2:23 so he's quite hands-on and he's
2:26 you know he can code and then the
2:27 workshop he did with us
2:30 a couple of months ago was quite
2:31 technical
2:33 um but
2:34 so yeah denny's a very technical person
2:37 but i must admit i still don't know what
2:39 danny is doing and i admire people who
2:41 can do many different things at the same
2:43 time so that's why i invited denny to
2:45 talk more about this
2:47 so danny is an emelops architect at
2:50 wildlabs and in this episode we'll learn
2:52 what it means and what
2:54 what envelopes architects do so welcome
2:58 hi thanks alexi uh i'm excited that you
3:00 decided to invite me on uh and i feel so
3:03 honored that you you say that you
3:05 respect people who can do a lot of
3:06 things because i do a lot of things in
3:08 my personal life and in my professional
3:10 life
3:12 yeah so before we talk about
3:14 you know and then the main topic emelops
3:16 architect let's start with your
3:17 background so can you tell us how you
3:19 ended up doing so many things
3:22 and yeah what was your career journey so
3:23 far
3:24 yeah um i'll give you i'll give you the
3:26 long version because we're we're here
3:28 for an hour i'm sitting back in my chair
3:29 so um growing up i i grew up in the bay
3:32 area in mountain view actually which is
3:34 the headquarters of google and tons of
3:36 startups and i was surrounded by tech
3:37 and i never thought i wanted to get into
3:39 tech uh i was never that good at math my
3:42 dad tried to teach me programming and i
3:44 was so incredibly bored um i really
3:46 loved the humanities i really loved
3:49 history and political science so i
3:51 thought the the way to do that and make
3:53 money was to become a lawyer so i
3:55 dropped out of high school i went to
3:57 community college and i started taking
3:59 classes about how to be a paralegal
4:02 which is like kind of like what a nurse
4:03 is to a doctor a paralegal is to a
4:05 lawyer somebody who has some autonomy
4:07 but mostly is helping somebody with a
4:09 higher level of certification and i
4:11 realized very quickly that i absolutely
4:14 hated law that it really was not the
4:16 right profession for me i thought it was
4:18 like sitting and discussing you know big
4:20 ideas like in suits right
4:22 yeah exactly right like exactly i
4:24 thought it was like suits turns out it's
4:25 paperwork like it's all it's all just
4:27 like filling out paperwork and if you
4:29 mess up the paperwork by switching a
4:31 date you are gonna get somebody in jail
4:34 so uh i realized that the law is not for
4:36 me and had like a big identity crisis um
4:40 i applied to colleges wanting to study
4:43 political science to university i should
4:45 say wanting to study political science
4:46 because i thought i had wanted to be a
4:48 lawyer got accepted for political
4:50 science and then really had no idea what
4:52 to do but i i had taken this tax class
4:54 in community college and i really like
4:57 like that statistics class and then i
4:59 found out that ucla the school that i
5:00 went to had a statistics major so i
5:04 started taking more and more stats
5:05 classes for that major it was originally
5:07 i was just going to do a minor and then
5:09 i liked it so much that i turned it into
5:10 my major
5:12 i
5:13 turned out that i actually really liked
5:14 programming i just wanted to do object
5:16 oriented programming instead of my dad
5:18 was teaching me a different paradigm
5:19 with programming basic right
5:22 go to tag
5:27 yeah like my dad really wanted to start
5:29 with like logic i mean he has like an
5:30 electrical engineering background so he
5:32 wanted to start at like the hardware
5:33 level logic gates firmware and that was
5:35 like assembly
5:36 assembly yeah that was that was too deep
5:38 for me and i really uh like the
5:41 abstractions that we get to use these
5:42 days and especially when when i learned
5:45 for so i started with c plus and that
5:47 was uh interesting but it was annoying
5:50 having to think about objects and having
5:52 to keep track of everything then i
5:53 learned about r because we were using
5:55 that in our stats courses and i was like
5:56 oh this is cool i can write english and
5:59 the computer will understand and then
6:00 when i discovered python in my job i was
6:02 like oh man okay this is this is where
6:04 it's at i can write english the computer
6:05 will understand it and people won't make
6:08 fun of me for writing everything in r so
6:10 so that was that was my my academic
6:13 background and how i discovered machine
6:14 learning because machine learning was
6:16 really emerging at the core of the
6:18 statistics classes that i was taking all
6:20 of the like interesting cutting-edge
6:22 stats classes were really machine
6:23 learning oriented um i went back to the
6:26 bay area to to live with my family and i
6:30 worked at a startup called cubel
6:32 i started there as an analyst uh working
6:35 on the product team and then got a
6:37 promotion to be a product manager for
6:39 our data science and our machine
6:41 learning products because uh the the
6:44 company was pretty focused on data
6:45 engineering but we wanted to expand into
6:47 data science and machine learning
6:50 from there the story gets a little bit
6:51 rocky i wanted to move to singapore so i
6:54 took a job working for boston consulting
6:57 group as a data scientist in singapore
6:59 and i got accepted and whatever i was on
7:02 my way there and then this this like
7:04 crazy thing happened where there was a
7:05 global pandemic so on my way to
7:07 singapore i got stranded in the
7:08 philippines for a couple months had to
7:11 come back for
7:12 to the us had to look for a new job
7:14 i ended up working at a database company
7:16 called imply and then uh
7:19 and then i i joined y labs uh about a
7:21 year after working at apply so a very
7:24 convoluted story for how i got it so
7:26 what did you do before y labs
7:28 what was your role yeah so before y labs
7:32 i was a field engineer um and there's a
7:34 here's
7:35 yeah there's a bunch of like very
7:37 related kind of abstract titles that are
7:39 all related in the space like solutions
7:42 architect solutions engineer sales
7:44 engineer field engineer basically what
7:46 they mean is you work for a vendor and
7:50 that vendor's product is so technical
7:52 that a sales person by themselves can't
7:54 sell it right so you need somebody who
7:56 specializes in the technical side of the
7:58 product to be able to to talk to
8:01 customers my my joke that i would make
8:03 when i was working at imply was that i
8:05 was there to answer questions when my
8:07 sales rep didn't know what they were
8:08 talking about anymore
8:11 was it a joke or
8:13 [Music]
8:15 sounds like a
8:17 job description
8:19 okay so you first did law then stats
8:22 major then
8:24 you worked as an analyst a pm after that
8:27 then as a fields engineer and now as i'm
8:29 a lobster architect so you
8:31 have uh
8:32 born like quite a few hats right like
8:34 you tried quite a few different things
8:37 so what do you do today as a an
8:40 envelopes architect
8:42 so i think uh
8:44 alexie asked me this question over slack
8:46 before we'd scheduled this podcast and i
8:48 think my very vague non-descriptive
8:50 answer is how i managed to land getting
8:52 getting interviewed on the podcast
8:54 because the answer is that it it's still
8:56 very much blinding the very the very
8:58 short answer is that now my role is
9:01 primarily focused on
9:03 um doing very similar to what i was
9:05 doing before but not as extensively
9:07 customer oriented basically my skill set
9:09 is that i am very comfortable
9:11 communicating i'm very comfortable
9:13 navigating customer interactions i've
9:15 spent a lot of time in this market so i
9:17 understand what's happening in the
9:18 market so i can both do the business
9:20 stuff and i understand the technical
9:22 stuff well enough to be able to get by i
9:25 haven't actually written any like very
9:26 serious code in a while but i can you
9:28 know throw together a demo and
9:30 importantly i understand the basic
9:31 concepts that are necessary to be able
9:33 to have these conversations so anything
9:35 that requires both a technical
9:36 understanding and a business
9:38 understanding is basically what i do now
9:41 and i think you're quite humble because
9:43 like the demo you did the webinar the
9:45 workshop you did about while ops y logs
9:48 it was quite technical so you would
9:50 create a kafka stream right so then you
9:53 would explain how profiles work like
9:55 that how they are mergeable i think it's
9:57 a
9:58 pretty low level i would say i mean to
10:00 some extent right but still
10:02 like it's not just oh some technical
10:04 stuff it's um
10:05 not every data scientist knows uh these
10:08 kind of things
10:09 i'll tell my dad you said that thanks a
10:11 lot he's tuning in probably not
10:14 so let's see if there are questions
10:17 uh so this is what emma lobster he texts
10:19 you right so this is a person who is uh
10:22 who can talk
10:24 with both customers and
10:26 i don't know business and technical
10:27 person
10:28 but persons like people in the team yeah
10:32 i mean i don't i don't know that this is
10:34 what the role would be in general um
10:36 this is what the role what the title we
10:38 decided on for me was because when i
10:41 joined y labs we were still a seed stage
10:43 company
10:44 everybody else's title was engineer or
10:47 we had i think just i think just bernie
10:49 so i think we had just the one data
10:50 scientist and then the the founders
10:52 right the c-suite so i was the first
10:54 person uh who didn't found the company
10:57 whose job wasn't building the product
10:59 which meant that i was doing really like
11:01 anything and everything that wasn't
11:03 building the product so the the
11:05 architect in the title is is really
11:07 meant to
11:08 to convey the fact that i work with with
11:10 our customers with our partners with
11:13 even internally within our company with
11:15 helping people understand the landscape
11:17 right like i don't do a whole lot of
11:18 engineering these days i'm not building
11:20 scalable things but i i understand the
11:22 trade-offs involved in different
11:24 architectural choices and different
11:25 tooling choices and i understand the the
11:28 tooling market out there from having
11:29 been in the space for so long that yeah
11:31 i can help people navigate and you know
11:33 help our customers navigate their
11:35 tooling choices in a way that's helpful
11:37 for them because i don't know if you've
11:38 seen the like you know the 2022 big data
11:41 and ai landscape diagram that matt turk
11:44 puts out it's a little bit scary look at
11:46 these days now
11:47 was it is it the same one the from
11:49 gartner or it's a different one oh no
11:51 it's it's here i'll pull it up um
11:54 it's this like massive we like to call
11:57 it like a nascar diagram because it
11:59 literally it just looks like the side of
12:00 a nascar with so many different logos on
12:03 it here can i can i hear my screen
12:05 no because for people who will listen to
12:08 this they will not uh see this but maybe
12:10 you can share the link and i will post
12:12 the link in the chat and then in the
12:13 show notes so yeah but i imagine it's
12:15 like uh
12:17 yeah
12:17 data landscape and they'll find it just
12:20 like like
12:21 you know a big image with a lot of small
12:23 logos right
12:24 right and they it represents all of
12:26 these companies that do ml ml ops ml as
12:29 a service data data engineering etl
12:32 pipelines and then you really have to
12:35 zoom in to see the logos right because
12:37 otherwise it's just a big blur right
12:38 exactly exactly that's the one okay
12:41 so you're saying that you actually came
12:43 up with this title you invented it for
12:46 this job you were going to do
12:48 i would say so yeah
12:50 have you met tata other envelopes
12:51 architects
12:52 um i've met some i think the closest is
12:55 ai architect and those are people that i
12:57 tend to work with pretty closely at our
12:59 at our customers that are large enough
13:00 to have somebody in that role um but no
13:03 i mean i've met ml engineers and i tend
13:06 to work or ml ops engineers and i tend
13:08 to work pretty closely with those people
13:09 too because they're usually building out
13:11 the ml ops platform at all at a larger
13:13 company um but yeah i think ml ops
13:15 architect we can look on linkedin but i
13:17 think i might be the only one
13:20 yeah so because my next question is how
13:21 many people are out there with this
13:24 title but i guess yeah you don't know
13:26 this because i was also wondering like
13:27 how many people
13:29 are there who do
13:30 similar work to you i guess in some
13:33 companies who also
13:34 are in this field like a malops field uh
13:37 maybe i don't know iterative or others
13:39 um who have some solutions and then they
13:42 have uh how is it called uh sales
13:44 engineer or television architect right
13:47 who are doing similar stuff right
13:49 uh i would say so yeah i think you know
13:52 i think there's some limitations in
13:55 terms of thinking about my role purely
13:57 in the same way that my role wasn't
13:59 imply like i'd imply really my job was
14:01 pre-sales right i would go in the sales
14:04 with the account executive i would do
14:06 the demo i would like run the proof of
14:08 concept with the customer which you know
14:10 required a certain amount of technical
14:11 skill but then when when things started
14:14 to like really take off after the deal
14:15 was signed when it was time to really do
14:17 implementation i would just hand it off
14:18 to a solutions architect and go on to
14:20 the next opportunity at y labs like i
14:23 really i was the first person hired on
14:25 the go to market team and i was the only
14:26 person on the go to market team for
14:28 about six months so i was doing like our
14:30 devrel evangelism developer advocacy i
14:33 was doing our product uh product
14:35 marketing i was doing like our social
14:37 media and event and and community
14:40 management and like all of these
14:42 different go to market related roles
14:44 thankfully since then that was very
14:46 overwhelming thankfully since then we've
14:47 hired like a customer success data
14:49 scientist to do post sales solutions
14:51 engineer to do pre-sales an evangelist
14:54 to take over a lot of the community and
14:56 community management devrel dev advocacy
14:59 stuff so i'm i'm mostly still just
15:01 helping them on board helping them get
15:04 their footing giving them guidance and
15:05 direction in terms of how to be
15:06 successful and then doing a lot of the
15:08 the product marketing and kind of
15:10 figuring out how we want to decide the
15:12 messaging directions of our product so
15:15 it's yeah it's still a little bit
15:16 challenging to like strictly define the
15:18 role this is like a an ongoing
15:20 conversation that i have with the
15:22 leadership of my company to figure out
15:23 like how can i be most helpful given
15:25 this skill set because i know i can i
15:27 can be flexible i can do a lot of
15:29 different things and the question is
15:30 just how can i help the most with the
15:32 skills that i have
15:34 yeah with this flexibility when you say
15:36 you can do whatever
15:38 needs to happen right so you need to do
15:41 devrel you just go and do the rail until
15:43 you hire the real person right and then
15:45 you need to do community management
15:47 before you hire a community manager
15:49 right and now you're taking care of
15:50 product analytics uh product marketing
15:52 sorry and then you hire a product
15:54 marketer who will take care of this
15:56 right and then i guess you just can
15:58 chill and i don't know do interviews
16:01 all day long but yeah like with this
16:03 flexibility like the question i have is
16:06 like how can you convince a potential
16:08 employer that you can do all these
16:10 things because it's
16:12 a lot of different uh not random things
16:14 but they're you know there are different
16:16 things like how can we convince that you
16:18 can do these things
16:20 totally and uh thankfully it's not a
16:23 question i have to ask myself right now
16:25 because i love my job
16:28 yeah i did yeah well i i mean i think
16:31 i i think the great thing about working
16:33 at really early stage startups is that
16:35 you do really pick up this like you do
16:37 whatever needs to get done mentality and
16:39 that's something that
16:42 it's not a hundred percent whether you
16:43 can pick it up with somebody from
16:45 talking to them but there are like some
16:46 signs right that hiring managers that
16:49 small startups can use to figure out
16:51 like is this person i hate this this
16:53 term like go-getter is such a like
16:57 yeah but like that that's what it is
16:59 right it's like somebody who's willing
17:00 to like pick up the slack do whatever
17:02 needs to happen right like this person
17:04 who isn't like come in and tell me what
17:06 to do like assemble this this part in
17:09 this way but somebody who will look at
17:11 the big picture and figure out what what
17:12 needs to be solved there so i think
17:15 at least for early stage startups i i
17:17 think they can look back at my track
17:18 record and you know i i can
17:20 not that i'm looking for a new job
17:22 anytime soon but i i don't think it
17:24 would be that challenging if you know if
17:26 y labs uh had to go down then i had to
17:29 look for another job i don't think it
17:30 would be that challenging for me now if
17:32 i wanted to go work at like uh like a
17:33 fang company i think that'd be
17:35 impossible like
17:36 and i also like they will torture you
17:38 with this lead code style questions
17:41 first before you can even you know show
17:43 that you can do other things
17:45 exactly
17:46 exactly and and i don't think i would
17:48 really enjoy working at a company like
17:50 that because i also
17:51 wouldn't be able to like do everything
17:53 in the way that i can do everything
17:55 startup right the issue with when when
17:57 you've hired somebody for every role
17:58 then that means that everybody needs to
18:00 have just one particular role and i
18:02 think it's kind of exciting and fun to
18:05 wear so many hats and to get pulled so
18:07 many directions oh it's obviously also
18:09 like stressful and hard and there's
18:12 disadvantages to it too um but i wake up
18:15 every day not knowing what i'm going to
18:16 do that day and checking my google
18:18 calendar to figure out what meetings i
18:19 have
18:20 that's exciting
18:22 do you remember how actually how your
18:24 interview
18:25 how did it go like what were the
18:27 questions that like with who was the
18:30 interview what kind of questions they
18:31 asked
18:33 like how did they decide that uh
18:35 you're good for this
18:37 yeah
18:38 so the interviews like got pulled in a
18:40 couple different directions right
18:41 because they wanted to validate a number
18:43 of different skills so uh the last so we
18:46 did the amazon style like intensive
18:48 interview process where i had five
18:50 interviews spread out i think i had mine
18:52 over two days but like amazon style
18:54 would be five interviews in one day uh
18:56 there's a lot of leadership principles
18:58 right
18:59 yeah yeah a lot a lot of the way that y
19:01 labs operates comes from amazon so most
19:04 of the founders if not all they come
19:06 from amazon right three out of four yeah
19:09 okay
19:10 yeah
19:11 so
19:12 my the interview that stood out to me a
19:15 lot um was with our data scientist
19:17 bernice
19:18 uh because i
19:20 uh was just so excited about the company
19:22 after this interview and i and you know
19:24 that that doesn't always happen right
19:26 it's it's not every conversation you
19:27 have with people at even a good company
19:29 or a good role will get you excited but
19:31 uh bernice asked me some really
19:34 interesting questions we got to like
19:35 really dive into some machine learning
19:37 theory and like our mutual statistics
19:39 backgrounds and that way of analyzing
19:41 machine learning was really helpful in
19:43 that interview she introduced me to some
19:44 new concepts which i found really really
19:46 interesting about
19:48 particular ways of
19:50 doing splitting in random forests and in
19:52 decision trees um and how to speed that
19:54 process up um and i i just realized that
19:57 i met somebody who was like smarter than
19:59 i was in the same way that i was and
20:01 that's always a very exciting thing for
20:02 me to find in other people because it
20:04 means that i can learn a lot from them
20:06 so bernice asked me a lot of like data
20:08 science and machine learning oriented
20:10 questions uh maria the chief operating
20:12 officer who's the person that i directly
20:14 report to asked me a lot of like
20:16 business and like sales oriented
20:18 questions um
20:20 the ceo asked me kind of like
20:23 directional like
20:25 high level overview questions and then i
20:27 think i also had interviews with
20:30 our chief product officer sam
20:33 but i don't totally remember what those
20:35 questions were and i think andy our head
20:37 of engineering also asked me questions
20:39 but i i don't remember them either
20:41 so basically the entire
20:43 company
20:44 all the stuff right interviewed you
20:46 because you said that there were four
20:48 founders uh
20:49 yeah so it was the fourth round
20:52 yeah okay
20:53 there was a big engineering team
20:55 i mean not not huge but there were like
20:57 five or six people on the engineering
20:58 team at that point um and i only got
21:00 interviewed by the head of engineering
21:02 but also like i would not be very i mean
21:04 i'm sure if i practiced and read
21:06 cracking the coding interview and like
21:08 did the code for a couple hours a day i
21:11 could do like a traditional software
21:12 engineering interview but yeah like like
21:14 i said that's not really what my skill
21:16 set is um
21:17 the the coding that i do is really i
21:19 would say not engineering like i program
21:21 and i code but it's like scripting
21:24 rather than trying to build scalable
21:26 processes and uh software that'll scale
21:30 and so why did you decide to actually
21:32 like i guess at some point they gave you
21:34 an offer and then you needed to decide
21:36 okay do i want to join this company and
21:39 this particular do this particular thing
21:41 join this company in this role or not
21:43 like how did you make this decision that
21:45 you want to do like all these things
21:46 like wasn't it scale like what if i
21:49 um
21:50 couldn't do this thing like what if i'm
21:52 not a good product marketer like i guess
21:55 you didn't have that
21:57 much community management experience i
21:59 had there right back then uh like wasn't
22:02 it scary for you
22:04 yeah so i remember when i made the
22:06 decision
22:08 um and you know there was like still the
22:10 negotiation period afterwards and all
22:11 this but there was a point that i
22:13 was like mentally got committed to it
22:15 and it was almost uh probably about 50
22:19 weeks ago my anniversary is coming up so
22:21 it's a fun fun time for us to be having
22:22 this conversation um
22:25 yeah i was uh it was the summer solstice
22:27 and i was backpacking in denali national
22:29 park for four days completely
22:31 disconnected from the world and seeing
22:33 grizzly bears and getting to the tops of
22:35 mountains and hiking on glaciers and
22:38 spending the time out there i i
22:41 had to struggle with what i wanted to do
22:42 right because i was at imply i was being
22:45 very successful as a field engineer i
22:47 basically had an offer in hand to get
22:50 promoted to a management role at in that
22:52 field engineering organization but i i
22:54 thought about like what that would mean
22:56 for me to be a manager of field
22:58 engineering and i i realized that
23:01 although i wanted and still want the
23:03 experience of management and
23:04 understanding what that's like i would
23:06 get a lot more exposure to a lot more
23:09 skills and a lot more interesting
23:11 experience by joining such an early
23:14 stage startup uh and then the big gamble
23:16 right is like early stage startups tend
23:18 to go out of business right it's pretty
23:20 hard so you're you're making a really
23:22 strong bet primarily on the people and i
23:24 thought about the conversations that i
23:25 had in my interviews i i thought about
23:27 the people that i'd met at this company
23:29 and i realized that i was just so
23:31 impressed with them and i knew that you
23:33 know no matter what the market was going
23:35 to throw at us no matter you know how
23:37 our product evolved that this group of
23:39 people was capable of making the right
23:41 choices and that they were going to
23:42 build a really strong company and
23:44 organization so yeah i think i figured
23:46 out what i wanted for myself which was i
23:49 want to do a lot of things and
23:50 experience hyper growth at a really
23:52 early stage startup and also i want to
23:55 be working with these people and i want
23:56 to have them in my company in my life
23:58 and it all occurred to you in the
24:00 mountains while watching grizzly bears
24:02 right
24:03 yeah i think it was more on the
24:04 mountaintops rather than but the grizzly
24:07 bears i was mostly just afraid rather
24:09 than thinking about violence
24:12 how far was the grizzly bear or like was
24:15 it a
24:16 metaphorical expression that you
24:17 actually sold oh no it was certainly not
24:19 metaphorical no no no there's a lot of
24:21 grizzly bears in denali national park so
24:24 the closest i ever saw them i would say
24:26 was maybe
24:27 um
24:28 you probably want this in in metric
24:30 right uh i would say like uh
24:33 they're 40 meters but on the other side
24:35 of a river um
24:37 oh okay but yeah but they get it close
24:39 right yeah well okay so it was like that
24:43 that was pretty close let's since i saw
24:45 not
24:59 meters available a grizzly bear at one
25:00 point but yeah
25:02 yeah
25:03 that i did
25:05 i guess these things make you wonder
25:08 what the future holds and is this what
25:10 i'm doing is it for me or not right
25:13 like do i want to be a manager
25:15 uh
25:16 on that like i said of field engineers
25:18 where i want to do
25:20 try many different things right right
25:22 right
25:24 okay yeah i see that we have quite a few
25:26 questions so maybe we can cover a couple
25:29 of them
25:31 so the first question is from um
25:34 emini
25:36 sorry if i mispronounce your name so the
25:38 question is envelopes lifecycle
25:39 management has a lot of topics to cover
25:41 and tooling to optimize from training to
25:44 inference how do you prioritize your
25:46 work with data scientists
25:49 yeah great question um so why labs i'm
25:53 alexi i promise not a product pitch
25:55 why lab is a company that's really
25:57 focused at the end of the life cycle
25:59 right or rather at there's not an end to
26:02 the life cycle because it's a cycle and
26:03 it's continuous at the end of the the
26:06 line if you were to draw this linearly
26:08 right because what y labs does is it
26:09 provides monitoring and observability
26:11 for models that have been deployed into
26:13 production right after you've taken your
26:15 model you've trained it you've
26:17 experimented on it you've figured out
26:18 the model you want to deploy you deploy
26:20 it now after you've deployed it you want
26:22 to make sure that it's still operating
26:24 effectively that it's its accuracy is
26:27 high i mean hopefully you're not
26:28 actually using accuracy that's like f1
26:30 is high whatever accuracy metric you're
26:32 using uh and that's that's really where
26:34 y labs comes into the picture so i would
26:36 say when i think about what i need to
26:38 prioritize in terms of my conversations
26:40 with with my customers what i need to
26:42 prioritize in terms of my understanding
26:44 of the tooling is basically the further
26:46 away it is from productionization the
26:49 less i care about it right like when i'm
26:51 talking to customers what we spend most
26:53 of our time talking about is what does
26:54 your inference process look like right
26:57 are you using bento ml or using
26:58 sagemaker ub ops teachable hub right
27:01 there's like all of these different
27:03 tools be they open source self-deployed
27:06 tools fast api flask or or manage
27:09 service providers around um
27:11 around deployment spend a lot of time on
27:13 that less and less time as we go through
27:16 like experiment tracking right like um
27:18 like weights and biases don't really
27:20 have to think about them very often um
27:23 even further back like the model
27:25 training um i don't even know what
27:27 people use for model i mean probably
27:28 still psychic learn and tensorflow and
27:30 the old basics
27:32 i don't know maybe there's fancy boost
27:34 yeah right
27:35 but yeah that was that's what i was
27:36 using in college like i don't think it's
27:38 changed that much um so yeah so i really
27:41 focus on the the tooling that's kind of
27:43 very late in in that process because it
27:46 tends to be what's most relevant to me
27:49 as we're expanding and this is like very
27:52 early to be talking about this but we're
27:54 exploring more how we can help not just
27:56 data scientists but also data engineers
27:59 and how even for data scientists we can
28:01 help them understand the entire data
28:03 pipeline right because when you
28:05 determine that there's a problem with
28:07 your machine learning model normally the
28:09 problem is much earlier in the data
28:11 pipeline when you've got like data drift
28:13 it's because it's happening in the real
28:14 world when you've got a data quality
28:16 problem it's because something upstream
28:18 of your model has gone wrong which means
28:19 that to have observability into the
28:21 model to be able to solve problems in
28:23 the model you need to be able to look at
28:24 everything upstream so i'm staying
28:26 really up to date on you know what are
28:28 people doing in terms of pipelining um
28:31 you know what are they doing in terms of
28:32 orchestration and really making sure
28:34 that i still understand the whole data
28:35 engineering process and to end
28:37 fortunately my work at cue bowl was
28:39 really helpful in making sure that i had
28:40 a strong grounding in that um but yeah
28:43 understanding all of the etl and
28:45 transformation and um all of the work
28:47 that happens before data even gets to a
28:49 model has has been really near and dear
28:51 to my heart these days but that's that's
28:53 kind of how i prioritize is based on
28:55 what's most relevant to y labs
28:59 so would you say that he usually talks
29:01 talk to customers who already have
29:03 something in production who already
29:06 trained a model who figured out how to
29:08 best deploy this model they already
29:10 deployed it and now they started to
29:12 maybe experiencing some i don't know
29:15 drifts so models go crazy or something
29:17 like this and then they think okay how
29:19 can we solve this problem and then they
29:21 go to you right would you say that this
29:23 is usually the case or sometimes a
29:26 company's clients come to you without
29:29 anything
29:31 those are definitely the easiest
29:32 conversations when when they come and
29:34 they've already deployed a model and
29:35 they've already felt paid right because
29:37 then then they have pain that they that
29:39 they need have alleviated and why labs
29:41 can help with that uh more often than
29:44 not we try to kind of be proactive and
29:47 preemptive instead of instead of
29:48 reactive so you know if we think
29:50 companies have models in production at
29:52 all we'll we'll talk to them even before
29:54 they've experienced that pain um to kind
29:57 of coach them through our our approach
29:59 and our thinking and sometimes they
30:00 understand and they're like oh yeah you
30:02 know we monitor our applications in
30:04 production of course we should monitor
30:05 our models other times they're like oh
30:07 it's not a priority for the organization
30:09 and then we say okay
30:10 we'll talk to you in six months when one
30:12 of your models goes down and then yeah
30:14 and this is what you told me
30:16 yeah basically
30:16 [Laughter]
30:18 um
30:19 and go figure you did come back and talk
30:22 to me about it again later i don't know
30:23 if it was clear
30:25 um
30:26 and you know we have some conversations
30:28 with people who are still at the model
30:30 development stage but you know it's just
30:32 not the most useful stage for us to be
30:34 involved right because they're trying to
30:36 solve different problems
30:38 okay and
30:40 you said you are trying to be preemptive
30:43 and this is also part of your role right
30:45 so you are trying to i don't know spread
30:47 awareness about this problem i don't
30:49 know talk on different
30:51 podcasts or like about this you know
30:54 model monitoring why it's important what
30:56 can
30:57 go wrong if you don't monitor your
30:59 models
31:00 things like this right this is what you
31:02 used to do right are you still doing
31:04 this
31:05 i would say i still do it to some extent
31:07 um you know we have a full-time
31:09 evangelist now and our data scientist
31:11 bernice who i talked about earlier you
31:13 know does this to some extent too i
31:15 would say we've seen like a really good
31:16 increase in market education on this
31:18 topic people are much less often asking
31:21 why do i have to monitor my model and
31:23 are more often asking how do i monitor
31:25 my model so that's that's that's a big
31:27 improvement and a big change but there's
31:30 still some market education to be done i
31:32 would say especially outside of like
31:34 major tech hubs
31:36 yeah there are quite a few companies
31:38 that
31:39 do monitoring and all of them
31:41 are spreading awareness right
31:44 so people now know about this problem
31:47 more than let's say one year ago or two
31:49 years ago
31:50 exactly exactly and actually funnily
31:53 enough one of the reasons that uh that i
31:55 was so intrigued about why labs is
31:57 because while i was working at imply i
31:59 was actually this is back in 2020
32:04 uh yeah in 2021 um
32:07 yeah okay first second half of 2020
32:09 first half of 2021
32:11 i had actually been going around and
32:13 doing a little bit of evangelism for
32:15 apache druid which is the open source
32:16 project that implies built on it's
32:18 basically like a fast analytic database
32:20 and i was going around and saying hey
32:22 you can use apache druid to do machine
32:24 learning monitoring and i would like
32:27 speak at conferences and and meetups and
32:30 talk about how you could architect
32:31 apache druid as the database to do
32:34 anomaly detection and alerting and
32:36 figure out analytics for machine
32:37 learning and then i talked to y labs and
32:40 i was like oh like you guys are using
32:42 apache druid for machine learning
32:44 monitoring i literally have been going
32:46 around and talking about people doing
32:48 this for the past year so it seems so
32:50 serendipitous and yeah that's that's
32:52 another big reason why i joined y labs
32:55 that's what we use under the hood right
32:57 right
32:58 uh that's one of the things that's yeah
33:00 that's one of the things that we're
33:01 using under the hood it would be a
33:03 little bit hard to just use druid for
33:04 this because druid is the data and then
33:06 things on top of that right right so you
33:08 need like dashboard ui on top of it to
33:11 be able to like see these changes you
33:12 need anomaly detection but yeah in terms
33:15 of having a really fast scalable
33:18 database apache druid is is really
33:20 useful and
33:21 we have some talks where we talk about
33:23 this as well our data engineer drew um
33:26 talks about yeah how how apache druid is
33:29 a really good fit for this particular
33:30 problem
33:32 and that's not the part of the open
33:33 source thing it's not a part of why
33:34 looks right so why logs you just use for
33:37 creating profiles and then these
33:38 profiles are sent somewhere and this
33:40 somewhere is
33:42 your proprietary solution right where
33:44 you keep track of all these things and
33:46 then you under the hood user internet
33:49 yeah so if you go to labs.ai
33:52 observability you can see actually
33:54 everything that i'm that i'm talking
33:55 about there's like this architecture
33:57 diagram that explains exactly what
33:59 you're saying so why logs is the open
34:01 source it takes in data it creates data
34:03 profiles which are statistical summaries
34:05 of that data
34:06 those profiles get sent to y labs under
34:09 the hood they get sent to well there's
34:11 an intermediate process that you know
34:13 like cleans them and does whatever but
34:14 then it lands in this apache druid
34:16 database and then we've got
34:17 visualizations anomaly detection
34:20 trigger alerts all of these things built
34:22 on top of it
34:24 yeah another question we have
34:27 is i don't know if you can answer this
34:29 because
34:30 the previous question i think you
34:31 clarified that you're a bit outside of
34:33 these decisions so the the question is
34:35 on what basis you make your choice of
34:38 tools
34:39 um like do you decide to use keep flow
34:41 which is an open source to
34:43 versus vertex ai which is commercial
34:45 versus thermal flow etc so i don't know
34:48 do you get to make these choices like do
34:50 customers talk to you when they are not
34:53 sure what to use
34:55 yeah no it's it's a really a really good
34:57 question and especially the build versus
34:59 buy question is a really early important
35:01 decision to make right like
35:03 how how invested are we in building out
35:06 this this feature or this tool ourselves
35:09 when you know why labs costs fifty
35:11 dollars per model per month and you're
35:13 paying your engineer god knows how much
35:15 money um so it's a question we get a lot
35:18 you know especially for for our space
35:20 now obviously i'm not the one in charge
35:21 of making that decision but i work with
35:24 people i work with data scientists and
35:26 with machine learning engineers so that
35:28 they can make the case to their managers
35:30 right these are people who've probably
35:32 never bought software at a commercial
35:33 level before so i help them make the
35:35 case to their manager and talk to them
35:37 about what their manager will care about
35:39 you know kpis mbos company risk all of
35:43 these things that like you know are uh
35:46 like garlic to vampires for machine
35:48 learning engineers and data scientists
35:50 which are really important for for
35:52 navigating a business or an organization
35:55 right and i think that's how i can be
35:56 most useful to to my to the customers
35:59 that i work with
36:00 so um
36:02 yeah
36:03 but i guess this is like more in the
36:05 context of you know whether they need to
36:07 go with while ups or with some open
36:09 source alternative but when it comes to
36:12 model serving which is not what you do
36:14 as a company
36:16 let's say you can use kubeflow like for
36:18 pipelines or this vertex ai
36:22 or i don't know built-in
36:24 like a company can just build this
36:25 in-house right
36:28 so do you
36:29 also
36:30 do your customers also ask you for an
36:32 opinion about this or usually they
36:34 already have something they already have
36:36 vertex eye when they come to you and
36:38 they say okay i have this pipeline on
36:40 vertical si i have this model deployed
36:42 in this way now
36:44 help me monitor it
36:46 yeah
36:47 so um y labs is platform agnostic and we
36:51 integrate with a lot of different tools
36:52 basically any tool that can run python
36:55 or java so like anything with spark or
36:57 scala or java
36:59 as well as anything in python so we tend
37:01 not to be too strongly opinionated and
37:03 we think you know our customers should
37:05 pick whatever is best for them and yeah
37:07 usually people at least have like an
37:09 early choice made right like by the time
37:11 they want to do monitoring usually
37:12 they're already doing it friends so i
37:13 don't think i have a ton of influence
37:15 with with the customers that i work with
37:17 on what their inference architecture
37:19 look like looks like now by the time
37:21 we've had a relationship for like six
37:23 months or a year if they're doing an
37:25 architectural review and if it's time
37:26 for them to to switch up the the work
37:29 that they're doing and um they're
37:31 they're examining their tool set at that
37:33 point usually i can be more helpful
37:34 right because most of the time they're
37:36 pretty in the weeds like using this one
37:38 thing they have a they're very deep and
37:40 not very wide on tooling exposure versus
37:43 i'm very very wide and not at all deep
37:45 on these tools so like i understand each
37:47 one of these tools and how they
37:49 interoperate and what the advantages and
37:51 disadvantages are but i've you know
37:53 maybe launched them or played around
37:55 with them once i don't have like the
37:56 deep expertise that people who really
37:58 spend their time in this tool have
38:01 then another question we have is about
38:02 this o n n x standard um have you heard
38:06 about this like it's getting uh like
38:09 it's getting wider adoption so would you
38:11 say many
38:13 of your customers use it or it's still i
38:15 don't know uh psychic learn models in
38:17 pickle deployed in flask
38:20 yeah i so i remember when onyx came out
38:22 um it was very interesting and very
38:24 exciting because we were we had been
38:26 using pmml as kind of like the standard
38:29 markup language for this but onyx kind
38:31 of helped to to bridge that gap for
38:33 interoperability of of these libraries i
38:36 don't see a ton of people using onyx but
38:39 again like i'm really not that involved
38:40 in the model development stage and
38:42 that's i think a lot of where where onyx
38:44 would be seen um i think onyx is really
38:47 cool in theory and probably gets used a
38:49 lot at like really big organizations
38:51 that have a need for really diverse tool
38:53 sets but especially with like the smb
38:56 and commercial customers that i work
38:57 with they they tend to kind of like pick
39:00 one tool set and run with it versus onyx
39:02 is really meant for interoperability and
39:04 the ability to communicate across you
39:06 know different ways of training models
39:09 what kind of setup do you usually see
39:11 that that you see more often than other
39:14 kinds of setups if you can talk about
39:16 this of course
39:17 i yeah i mean it's nothing it's not that
39:19 i can't talk about it because i have a
39:21 contract but it's just like there is no
39:23 there is no usual in in machine learning
39:25 operations like so oh
39:27 [Music]
39:29 yeah i mean i i would say the only the
39:31 slight common trends that i see is
39:34 people who really like aws will use an
39:38 entire aws stack people who really like
39:40 cp will entirely use a vertex stack
39:43 people who really like azure really like
39:45 we'll just use an entire azure machine
39:46 learning stack and not like touch too
39:48 many other other vendors
39:50 uh but you know
39:52 that's it's such a small mar like it's
39:55 not that there's consensus certainly not
39:57 that there's consensus around only using
40:00 cloud vendor tools because like a lot of
40:03 those tools are kind of lacking in a lot
40:04 of ways right like there's a lot of
40:06 feature gaps in a lot of those
40:07 technologies so yeah we i definitely see
40:10 super diverse and and that this is one
40:12 of the things that aya the ai
40:13 infrastructure alliance which both data
40:16 talks club and y labs are associated
40:18 with tries to kind of help customers
40:20 navigate is like how do you fit all of
40:23 these different tools together and which
40:25 tools are kind of swappable right like
40:27 you'd mentioned you know there are other
40:28 companies out there we're not the only
40:29 machine learning monitoring and
40:30 observability company
40:32 there are other companies out there as
40:33 well how do you like figure out which
40:35 tool is right for you and
40:37 even before that how do you figure out
40:38 where the tool fits in in the landscape
40:40 and that can be really daunting to
40:42 navigate for you know especially
40:43 somebody just starting to get their
40:44 mlops architecture together
40:47 okay
40:48 yeah thanks um
40:50 what do you like doing most in machine
40:52 learning and data science what is the
40:54 most rewarding things for you
40:56 think for you in the field
41:00 good question
41:02 i really like getting exposed to new
41:05 interesting ideas within the field and
41:08 like
41:09 new and really getting to like i miss
41:11 doing research basically and not not
41:13 that i was you know ever like that
41:14 strong of an academic but it gets me
41:17 really excited when i find a topic that
41:19 i can obsess about and that i'll just
41:21 spend hours figuring out and researching
41:23 like most recently that topic for me was
41:26 fairness and and bias in machine
41:28 learning
41:29 because you know i talked for a while
41:31 about how explainability is the thing
41:33 that everybody uses for this and then i
41:34 thought about it i was like but why like
41:36 what what does how does explainability
41:38 actually relate to fairness and bias so
41:40 i start i like put on my dusty old
41:42 paralegal hat again and started
41:43 researching the law around
41:45 discrimination and bias
41:47 and i ended up getting really deep into
41:49 this and realizing that actually the the
41:51 best things we can do to prevent bias
41:52 and machine learning models is rather
41:54 than try to focus on explainability to
41:56 focus on segmentation and the ability to
41:59 separate uh to be able to track
42:01 disparate impact so um yeah i really
42:04 love the ability to just deep dive into
42:06 a topic um a few years ago auto ml got
42:08 me really interested uh and hyper
42:10 parameter tuning and it turned out that
42:12 they were the same thing which was
42:14 pretty funny to realize at the time um
42:17 yeah so just getting to like really geek
42:19 out and and go really really deep on a
42:21 topic in ml is that still the most
42:23 exciting thing for me
42:26 so yeah uh you do
42:28 or you took part in doing deveral
42:31 product marketing community management
42:34 then also you said you just mentioned
42:36 that you're doing a bit of research like
42:38 figuring out like how fairness biases
42:40 work like
42:41 do we need explainable ai or not like
42:44 things like this
42:45 that's quite a lot of things and it's
42:47 pretty wide right so how how do you
42:50 manage to do all that like how do you
42:52 manage to
42:53 to do all these different things and
42:56 still say stay sane like what's your
42:58 secret
43:00 oh that's like a big assumption that i
43:01 stay sane
43:02 [Laughter]
43:05 so that's your secret
43:07 yeah no no i have a lot of productivity
43:10 management techniques that i that i use
43:12 i try to stick to inbox zero right now
43:15 my inbox is a little bit of a nightmare
43:17 but i really like using my inbox as a
43:19 like a tracking to-do list and then i
43:21 also have
43:22 another to-do list in uh in google
43:25 calendar that i keep associated with it
43:27 i try to like keep my tabs under control
43:30 too because i know it adds a lot of
43:32 mental stress to me
43:34 right i tried
43:37 because it worked
43:39 it's decent i would say it's not the
43:40 worst
43:41 how many times do you have open now
43:43 well so the thing that i do that i don't
43:45 see a lot of other people doing is
43:46 actually this is crazy i use windows not
43:49 not like the operating system but like i
43:51 have multiple windows open and each
43:53 window is a project effectively so i
43:55 have like one window for
43:58 course spaces
44:00 right yeah exactly exactly yeah that's
44:02 that's how windows or that's sorry
44:04 that's how apple refers to it so i've
44:05 got kind of my like catch-all you know
44:08 gmail google calendar whatever like
44:11 article i want to read one-off stuff and
44:13 then like i i've got you know one
44:16 workspace that's dedicated to
44:17 explainability fairness bias and that
44:20 research that i'm doing one that's
44:21 related to like you know getting ready
44:24 for uh our evangelist sage to come on
44:26 data talks club in a couple weeks and
44:28 making sure he's ready for that and you
44:29 know just like using these workspaces in
44:31 this way i i would say that like i
44:33 definitely think i could be more
44:35 effective at each thing if i was only
44:38 doing that thing but i don't think that
44:40 i've hit the limits of my ability to
44:42 wear multiple hats and do multiple tasks
44:46 so
44:47 would you say that sometimes you wish
44:49 you were
44:50 more like a specialist you would just
44:52 focus on i don't know explainability or
44:54 you would just focus on develop or you
44:56 would quickly become bored
44:58 i don't know whether i would become
45:00 bored i'm not sure but it's not an
45:02 appealing idea to me right now
45:04 i think maybe it will be later but um
45:07 are you familiar with the we're just
45:09 talking about automl and um
45:11 uh hyperparameter tuning are you
45:12 familiar with the explore exploit
45:14 trade-off and optimization theory
45:16 i've heard about this yeah it's like in
45:18 reinforcement learning right so like i'm
45:20 more like an ex
45:22 exploiter so let's say
45:24 like exploration would be trying
45:26 different kinds of food like you go to
45:28 different restaurants
45:29 and
45:30 me as a person like i find okay i like
45:32 this type of food so spaghetti bolognese
45:34 and i would just stick to this so i'm
45:36 more like an exploit kind of person but
45:38 explore kind of person would just you
45:40 know try different
45:42 types of wood and they wouldn't stop
45:44 just on one thing so you're saying
45:46 you're more like
45:47 explorer kind of person
45:49 well the the really useful finding from
45:52 optimization theory is that you need to
45:54 like balance the two of these and if
45:56 you've got a bounded amount of time over
45:58 which you can optimize around a search
46:00 space your optimal strategy is to start
46:03 off very exploratory and then to start
46:06 taking more and more advantage of the
46:08 things that you've learned in order to
46:11 be able to exploit and get them the
46:13 maximum value this is like thompson
46:15 resampling is one of the easiest and
46:17 best solutions to the multi-arm bandit
46:19 problem it's way similar to implement
46:21 than you know a full reinforcement
46:23 neural network uh and also it's like
46:25 beijing which is cool and it works
46:27 really well for this because it does
46:29 exactly that so it starts off by like
46:31 exploring the search space and then as
46:33 it learns more and more it starts
46:34 exploiting more and more and then by the
46:36 time it's done it's just
46:38 exploiting full time so this is pretty
46:40 abstract right optimization theory
46:42 thompson resampling whatever you can
46:43 think about this in our lives too right
46:44 like i've got a bounded time that i can
46:47 use to try to figure out what makes me
46:50 fulfilled happy joyful ecstatic whatever
46:52 it might be right and i whatever i'm
46:54 optimizing around whatever that
46:56 optimizing function is looking for i can
46:58 think about the period of my life that
47:00 i'm in and whether i should be focusing
47:02 on exploration and exploitation and at
47:04 this point in my life like i am really
47:06 interested and i get a lot of value out
47:08 of learning more and more uh and and
47:10 trying out lots of different things and
47:11 actually there's some good research that
47:13 says that as we get older we seek
47:16 novelty less and less right like we
47:18 naturally evolve into being more
47:21 exploitative which sounds very negative
47:23 but
47:23 not not actually like exploiting people
47:25 but exploiting our knowledge about the
47:27 world right we evolve into being more
47:29 exploitative as we get older and i think
47:32 that's really powerful and a really
47:33 useful mental framework for me to keep
47:35 in mind as i think about like oh would i
47:37 be happier
47:38 uh picking one thing and specializing in
47:40 i think likely probably that's what
47:42 everybody else does so i i don't think
47:45 i'll be like this for the rest of my
47:46 life but right now it's really powerful
47:48 for me to get to explore and try lots of
47:50 things and what's cool about this is
47:53 there are places where you can do this
47:55 it's not like people hire for
47:58 a role that is
47:59 super defined like you need to do x y
48:02 and z right they know that
48:04 it can be
48:05 pretty different and then you just
48:07 how did you say you pick whatever needs
48:09 to be done right and it's cool that
48:12 there are positions like that where you
48:14 can actually do this
48:16 exactly yeah i mean i'm super lucky to
48:18 have developed the skill set that you
48:20 know kind of bridges the gap between two
48:22 very important but often very disparate
48:25 i used to have a joke that uh i'm
48:28 not i'm neither scared of numbers nor
48:30 scared of uh nor scared of talking and
48:32 that the being scared of neither of them
48:34 is is a rare combination
48:36 okay yeah
48:38 would you say that there are many like
48:40 is is there a demand for people like you
48:43 who would
48:44 uh apparently say who um
48:48 who don't do things uh could do a lot of
48:51 things but not
48:52 well
48:55 i think so i think so i think
48:58 the consensus that i've seen in the
49:00 industry is kind of kind of a cop-out
49:02 but there's this concept of being
49:03 t-shaped as an engineer and that means
49:06 kind of like doing both right like
49:07 having broad broad overview and then
49:09 really deep expertise in something i
49:12 would say that i'm kind of like
49:13 horizontal line shape rather than t
49:15 shaped but the nice thing about being
49:17 horizontal line shaped is it's easy for
49:19 me to find something that i want to
49:21 really get deep into um i would say
49:24 there's enough demand for me that i'm
49:26 not that concerned about
49:28 not being able to find a job in the
49:29 future and i'm very lucky to be in a
49:31 position to be able to say that
49:34 have your thoughts about comp shape like
49:36 you know like a
49:38 vertical horizontal bar with many things
49:40 sticking outside
49:42 like
49:43 when you know
49:45 like many many different things not
49:47 super deep but
49:48 enough to you know get the job done
49:51 i like that
49:52 like for
49:53 e shape but e like then you would like
49:55 capital e but then you know rotate
49:57 outside right
49:59 yeah okay and
50:01 like if somebody wants to do
50:03 to follow your path and you
50:05 wear many different hats and do pretty
50:07 much or whatever needs to to be done
50:11 like what you would suggest them to do
50:12 like how should they go about finding a
50:15 role like this what kind of background
50:17 they should have like is it even
50:19 important does it really matter
50:22 um good question i think like
50:25 background not in the sense of academic
50:27 achievement or previous titles is not
50:29 important background in the sense of
50:31 like
50:32 being able to do these things matters
50:34 right like you you need to be able if
50:35 you want to be successful and if you
50:37 want to provide value to a company you
50:39 need to know
50:41 you don't need to know exactly how to do
50:42 it but you need to know that you can
50:44 figure out how to do it right like none
50:46 of us know off the bat how to how to
50:48 program um or even when we start a new
50:50 project like i spend most of my time
50:51 googling and on stack overflow right but
50:53 i know how to find the answers to the
50:55 questions that i have i think that's a
50:57 very important skill being able to find
50:58 answers to questions that you have and
51:00 knowing how to navigate like the massive
51:02 world of information that's that's in
51:04 front of us so you know being an
51:06 effective googler it's a really useful
51:07 skill i would say that more more broadly
51:12 i think it's definitely very possible to
51:14 break into this if people are are
51:16 genuinely really really interested you
51:17 know if an engineer wants to try out
51:20 getting more into the business side
51:21 product management can be a really
51:23 rewarding role sales engineering uh can
51:26 be a really rewarding role and and
51:28 you'll find that there's like a lot of
51:30 demand for for being able to bridge that
51:32 gap um you know if you're on the
51:34 engineering side you'll need to develop
51:36 more of your communication and business
51:38 skills for people wanting to go the
51:40 other way i would say it's much more of
51:41 an and i would say that's
51:43 not easy but it's not the hardest thing
51:45 to do right going the other way i think
51:47 is much more of an uphill battle right
51:49 like if you're an account executive and
51:51 you want to become a sales engineer i i
51:53 think that's really challenging to do
51:54 but it's certainly possible right
51:56 because it's you can learn and you can
51:57 upscale so you know people who are on
52:00 the business side but want to be more
52:02 technical there's tons of resources out
52:04 there you know like data talks club has
52:06 zoom camps um
52:08 there's like unlimited courses and books
52:10 and all of this information out there
52:12 and it's really just about like sitting
52:14 down and committing and i think a big
52:15 component of this is growth mindset
52:17 right is like looking at yourself in the
52:20 world not as like a static thing that
52:22 exists and will always do the same thing
52:24 our brains are incredible neurons that
52:26 fire together wire together it's
52:28 self-reinforcing and you're capable of
52:30 changing who you are very fundamentally
52:33 if you really put the intention and the
52:35 practice into it
52:37 so you need to have coding skills you
52:39 need to have communication skills you
52:41 need to be good at googling things and
52:43 you need to have growth mindset and i'm
52:45 really curious about this being an
52:47 effective googler because with coding
52:49 you can i don't know find a course on
52:51 free coding comp or code academy or
52:53 whatnot and learn this or you know go
52:55 into a bootcamp
52:57 but how do you
52:58 learn to google there are not no courses
53:00 about this right are there courses about
53:03 being an effective
53:04 googler i haven't seen such things you
53:07 know if there's not we should start one
53:08 because it's a very valuable skill um
53:11 i think those of us who grew up with
53:14 technology have a little bit of an
53:15 unfair advantage because like when we're
53:17 younger our brains are more plastic and
53:19 we
53:20 there there's studies that show that uh
53:22 millennials and and gen z people like
53:25 they don't memorize things as well as uh
53:28 people in previous generations but
53:30 they're better at under they're better
53:31 at memorizing the path to be able to
53:33 retrieve information like they'll
53:35 they'll remember the series of jumps
53:37 that they made via referencing in a book
53:39 or googling of how to get somewhere but
53:41 they won't remember the actual thing
53:42 itself um which is very nice when you
53:44 you know can plug your brain into the
53:46 global cuban connection of the internet
53:49 and very inconvenient when you're
53:50 backpacking in denali national park and
53:52 you don't remember whether grizzly bears
53:54 are attracted to the smell of food turns
53:56 out they are yeah um yeah or simply like
53:58 internet doesn't work right and then
54:00 you're right like at home with the
54:02 computer that works that's connected to
54:04 the
54:05 to the power like
54:06 yeah
54:07 but uh like okay like you have your vs
54:11 code open you have your python but what
54:13 to do next
54:14 how do i start
54:16 yeah i mean i've tried like coding on
54:18 planes before and it's very challenging
54:20 doesn't work i'm just so i'm just so
54:22 used to googling everything um yeah but
54:24 i i would say i don't think that there
54:26 there might be a course if not again
54:28 alexa you and i we should get on this
54:30 because i think it's going to be a big
54:31 money maker for us um but i think also
54:34 that this is one of those skills that
54:35 you can just pick up like stop asking
54:37 your coworkers things unless it's things
54:39 that aren't googleable like if it's
54:41 internal things and you're not going to
54:42 be able to find them on google but if
54:44 you like want to figure out a particular
54:46 excel thing
54:47 take the extra time you know like at
54:49 least in my growing up in elementary
54:52 school the teacher would not tell us
54:53 definitions of words she would tell us
54:55 to go look it up in a dictionary and i
54:57 think it's kind of the same like if you
54:59 want to get good at using a dictionary
55:00 if you want to get good at using google
55:02 just stop asking other people for
55:04 answers and start finding them yourself
55:06 and it's hard and it's you know it's
55:08 it's a challenge like learning a new
55:09 language it's uphill it's an uphill
55:11 battle but your brain will wire itself
55:13 in a way that makes it easier
55:17 okay i think we should be prepping up
55:19 and then maybe
55:21 since we spent quite a lot of time
55:22 talking about wild locks and then your
55:24 name here is wildlabs team
55:27 and uh
55:28 and we know that because you
55:30 pay just for one license
55:33 so the question is about uh y logs um so
55:36 what are the key functional differences
55:38 between why locks free versus made
55:42 is this really a question we got alexi
55:44 or yeah there is a question yeah i'm not
55:46 picking this up there is a
55:50 okay so um there's no paid version of
55:53 why logs um y logs is our open source
55:55 library so it's totally open source
55:57 everything about it is completely
55:59 accessible and completely free obviously
56:01 as all open source libraries are
56:03 why logs takes in data and can be text
56:06 or tabular data or images whatever kind
56:08 of data and it generates statistical
56:10 summaries of that data and those
56:12 summaries are called data profiles those
56:14 profiles you can do a number of
56:15 different things with them in in a
56:17 course earlier in a workshop earlier
56:18 with alexia data talks club i showed how
56:21 you can set constraints in order to get
56:22 alerted when data looks different than
56:24 you expected to how you can like
56:25 visually explore your data using the
56:27 profile visualizer one of the things you
56:29 can do with these these profiles is you
56:32 can send them to y labs now y labs takes
56:35 in these profiles that you've generated
56:37 with the open source and with the
56:39 statistical summaries of data it allows
56:41 you to track changes in your data over
56:44 time which sounds very innocuous but
56:46 actually has very powerful impacts both
56:48 for data scientists and for data
56:49 engineers right for data scientists you
56:51 can pick up on model performance
56:53 degradation model failure data drift all
56:56 of these types of problems for data
56:57 engineers you can pick up on data
56:59 quality issues like a spike in null
57:01 values breaking
57:03 breaking changes of data schema or data
57:05 definitions so you can pick up on on
57:08 these types of problems in a solution
57:10 that's totally sas so you never have to
57:11 deal with infrastructure it's got a
57:14 self-serve option so you can go to
57:15 ylabs.ai
57:17 free and sign up for an account yourself
57:18 and you'll never have to talk to me or a
57:20 salesperson or anybody like that
57:23 you can just start using it right away
57:24 and the if you have just a single model
57:27 or just a single data set you can use it
57:28 for free so i guess the important
57:30 distinction between y labs and y logs is
57:32 why logs is open source and it takes in
57:35 data and generates profiles why labs is
57:38 software as a service and it takes in
57:39 those profiles and it generates alerts
57:42 anomaly detection and allows you to
57:44 explore those profiles
57:46 yeah so do sign up now so maybe the team
57:49 will finally afford having multiple
57:51 licenses sorry i couldn't help but say
57:56 that about this
57:59 i'll start a kickstarter alexi if you
58:00 want to donate to the y labs having
58:02 multiple zoom accounts
58:06 okay yeah uh anything else you want to
58:09 mention before we wrap up
58:11 um no i i guess just that like i
58:15 uh
58:15 so love my career and it's been really
58:18 really rewarding professionally it's
58:20 been so engaging and interesting and i
58:22 know it can be scary to make the jump
58:24 just like it's scary to see grizzly
58:26 bears on the other side of the river but
58:28 it's really powerful to be able to take
58:30 yourself into kind of the edge of your
58:32 comfort zone and to push yourself to do
58:35 things that are hard it it's like it's
58:38 fulfillment as a human being to to be
58:40 able to grow and expand and improve so
58:42 um to me i think it's really valuable to
58:44 be able to do that
58:46 okay yeah so if you want to reach out to
58:48 danny so he's first in data docs club
58:50 slack you can find him there then also
58:53 the mobile apps have their own slack
58:55 community and i think i remember when i
58:58 joined your community the first thing i
58:59 saw was a message from you i think it
59:01 was automated because in the message
59:04 it assumed that we didn't know each
59:05 other but we did know each other so but
59:08 yeah you'll see a message from is it
59:10 still yeah i don't send those messages
59:12 anymore you don't see it you don't send
59:14 this but yeah
59:15 there's another place where you can find
59:17 any or twitter i guess right where else
59:19 can people not not huge on twitter um
59:22 trying to get more active on it but
59:23 linkedin i'm on linkedin all the time um
59:26 yeah and and you can just email me to
59:31 okay dannylabs.ai
59:31 guess that would be it for today thanks
59:33 uh danny for joining us thanks everyone
59:35 for joining us too for asking questions
59:37 and yeah
59:39 and tune in like in a couple of weeks
59:41 we'll have a
59:42 workshop from while ups so
59:45 yeah keep an eye
59:46 cool thanks alexi thanks for having me
59:48 on good seeing you
59:50 right have a nice