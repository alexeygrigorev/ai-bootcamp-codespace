0:00 everyone Welcome to our event this event
0:02 is brought to you by datadox club which
0:03 is a community of people who love data
0:05 we have weekly events today is one of
0:07 such events and if you want to find out
0:10 more about the events we have there is a
0:11 link in the description go there click
0:13 on this link and you'll see all other
0:15 events we have in our schedule very
0:18 important if you haven't subscribed to
0:19 our YouTube channel do it now this way
0:22 you will not miss any
0:24 streams like this one in the future and
0:26 we have an amazing slack Community join
0:28 it to hang out with other lead
0:29 enthusiasts so if you haven't you're
0:31 missing out during today's interview you
0:34 can ask any question you want and I will
0:36 be covering these questions during the
0:38 interview so there is a pinned Link in
0:39 the live chat click on this link and ask
0:42 a question
0:43 and this is the usual introduction
0:46 needle now
0:48 it's over now I open the questions we
0:51 prepared
0:53 for you
0:55 and
0:59 one second
1:02 I think I'm ready
1:05 are you I'm ready as well
1:09 okay so this week we'll talk about uh
1:12 quite a few things so building a machine
1:15 learning platform career and being
1:19 generally with specialist I think quite
1:20 a
1:21 wide range of topics so we have a
1:23 special guest today uh Kristoff or Chris
1:26 so Christoph with a seasoned engineer
1:29 with 17 years of professional experience
1:31 in building software currently he works
1:34 at zolanda where he's supporting machine
1:36 learning practitioners as a machine
1:37 learning platform engineer actually if
1:40 you maybe you know Chris has given a
1:44 talk about that a few months ago where
1:46 he presented the machine learning
1:48 platform they builted to London so we
1:51 will include the link in the in the
1:52 notes so you if you haven't seen it
1:55 check it out it's in our Channel too and
1:58 right now Chris is on a sabbatical where
2:01 he is learning and brought in his
2:03 machine learning skills right
2:05 so welcome
2:07 to have you here again
2:09 hello everyone Hi hi Alex
2:12 so questions for today is interview are
2:15 prepared by Johanna buyer so thanks
2:17 Johanna for your help and let's start so
2:20 we'll start with your background
2:22 can you tell us about your career
2:23 Journey so far
2:25 yes so it started quite a while ago so
2:29 um in 2000 I built my first website and
2:33 since then in 2005 I started to work as
2:37 a software engineer I work in Pharma for
2:40 a company called Rush this was my first
2:42 job as a software engineer specializing
2:44 in front end and then I work for a
2:47 company that some some of you have found
2:50 memories of for Nokia I was working
2:53 there on geolocation Services also
2:56 working mostly front-end and map
2:58 applications and navigation
3:00 and then I decided to switch my career
3:03 to something completely different and
3:05 got into game development
3:07 I was working for a company called Huga
3:09 it's a berlin-based startup wonderful
3:13 place where I spent five years working
3:15 on mobile games for example for iOS also
3:18 I built a game for this device for Apple
3:21 watch it still runs on my device you can
3:25 actually play games on Apple watch yes
3:27 that was one of the things we wanted to
3:29 try out and it's definitely possible so
3:32 the game is even now do people actually
3:34 play it
3:35 okay I guess it's not really convenient
3:37 is it or it's
3:38 um it is this was part of the experiment
3:40 to find out is it a good platform for
3:42 games it is possible but there are only
3:45 certain kinds of games you can build for
3:47 it that makes sense so for example uh
3:50 so-called idle games where you do
3:52 something and then you wait and in a
3:54 while your what will remind you to play
3:56 again
3:56 so it was more like a proof of concept
3:59 so like you cannot really play Tetris or
4:01 Bubble Witch or anything like that I
4:02 think that risk would be possible if
4:04 it's a simplified version but maybe not
4:07 the most convenient okay interesting and
4:11 then after UGA I decided to switch
4:13 careers again and join salando um
4:15 Samantha is a company where it's quite
4:18 easy to switch between different roles
4:20 and the company is encouraging that so I
4:22 started as a full stack engineer working
4:25 most with python and then I moved
4:28 towards data in the first team in that
4:31 area I was working on data governance
4:34 topics
4:35 for one year and then three years ago I
4:38 reached my current destination which is
4:40 machine learning I joined machine
4:42 learning platform team where I was
4:44 working as a software engineer and now
4:45 as an internal consultant
4:48 so you started your career I guess with
4:51 HTML and a bit of JavaScript right so
4:53 that's right you built your first
4:55 website I guess maybe some PHP right or
4:57 PHP and the very first language I
5:00 started with was Pearl if you remember
5:02 I know it existed so excess still exists
5:06 and every time I copy a snippet from the
5:08 internet with some protocol my brain
5:10 just uh explodes I don't know how people
5:13 in their mind in the right mind can
5:16 write this I hopefully do not offend any
5:18 per lovers I know they exist I actually
5:21 really not for me I guess but it has
5:23 reputation of some people call it right
5:26 only language because you can write it
5:28 but then it's not very easy to read you
5:30 leave only one's language yes so then it
5:34 was Pearl right and then you joined
5:36 Nokia what kind of Stack did you use at
5:38 Nokia I guess like Java right or
5:40 something so Nokia I was working on the
5:42 front-end applications that were running
5:43 in a browser both on mobile and in the
5:46 desktop and we're using JavaScript
5:48 JavaScript right so you weren't writing
5:51 any mobile code right on the front end
5:54 so at the time at Nokia yes it was only
5:57 JavaScript and actually this was also a
5:59 reason I was hired for this gaming
6:01 company wuka because we also tried to do
6:04 mobile development using JavaScript and
6:06 the first project was in JavaScript and
6:08 only later we decided it's better to use
6:10 something native or Unity
6:14 okay and so you were talking about
6:17 Google right so as a as a game developer
6:19 you used
6:20 uh that's correct Unity there
6:22 and so I didn't use anything myself so
6:26 when I was there it was very exciting
6:28 time because Olga was trying different
6:30 technology so we started with HTML5
6:34 which was a big thing at the time around
6:37 2012. we built and ship again but we
6:41 decided it's not really the most
6:43 convenient and performance tool for
6:45 mobile development so we switched to
6:46 Native and I was mostly working there
6:49 with Objective C and Swift
6:51 and then the company moved to Unity but
6:54 around that time I also left and moved
6:58 and then at solanda at zalanda is a full
7:01 stack engineer you said he used python
7:04 mostly python yes so this from what I
7:07 hear these are completely different
7:08 Stacks so how did you so how did you
7:11 change your career so many times like
7:13 how did you convince the
7:16 employers to actually you know
7:19 give you a chance
7:23 um yes so
7:25 this is interesting question because
7:26 sometimes when companies are hiring
7:28 people they look for experts and
7:31 specialists in one area but in practice
7:33 pretty much in every place I work with I
7:36 worked at it turned out that in the end
7:39 the company is changing direction and
7:41 they actually want people to learn new
7:43 things and in every place I was
7:46 fortunate that the company allowed me to
7:48 try something new and learn so let's say
7:52 atuga the company decided to change
7:55 direction but they will help you with me
7:57 as a general purpose software engineer
7:59 and I was also very eager to get deeper
8:01 into Apple stock and I had few weeks to
8:05 just get into new code base
8:07 and then we just grow expertise as
8:09 you're actually building software so if
8:10 I understood you joined wuga as a
8:13 JavaScript developer or front-end
8:14 developer but then there was a chance to
8:17 work on uh mobile stuff and then you
8:19 took it right
8:21 yes so I was already hired with the
8:24 intention to work on mobile development
8:26 with JavaScript that was the project the
8:28 project was already going on but then we
8:31 decided uh we actually don't want to
8:33 continue working with JavaScript we want
8:35 to use native Tech because it's just
8:37 performing better okay and you were
8:40 using Objective C and uh I don't know
8:42 what else mobile Swift here and then
8:45 somehow you ended up as a full stack
8:48 engineer using python how did that
8:49 happen
8:50 exactly so web was always very close to
8:53 me and even though I was mostly
8:56 specializing in front and even for my
8:59 own private projects I already did some
9:01 back end so for example I did PHP Pearl
9:05 which I mentioned and also Ruby on Rails
9:07 so I had general idea
9:10 which was good enough to get me through
9:13 the interviews so in the interviews I
9:15 had at the land I had to use JavaScript
9:18 but then the project required also
9:22 python knowledge so then at the London I
9:24 remember I
9:25 force myself to have very quick learning
9:29 experience with python I read some books
9:32 about this started to code it also in my
9:34 spare time and very quickly I was able
9:37 to contribute and also what's worth
9:39 adding is that a lot of experience as a
9:42 generalist can transfer from one Tech
9:45 stack to another and this was a very
9:47 common theme in my career that for
9:49 example things such as SQL
9:52 it's one of the technologies that I use
9:54 pretty much in every company even though
9:56 it was not always my expertise or
9:59 learning kit was something that I just
10:02 keep using over and over in every role
10:05 and uh yeah so when he mentions Orlando
10:08 I remembered my interview with solanda
10:10 so actually I was interviewing for a
10:13 data data Sciences position and then I
10:15 was asked algorithmic challenges and
10:18 then I could use whatever language I
10:19 wanted so then for me was uh
10:22 um as a
10:24 like my background is in Java
10:27 development before data science so for
10:29 me it was the easiest to use Java and
10:31 they were like okay whatever use what
10:33 what do you want
10:34 and so they didn't really test me for
10:37 knowledge in a specific language they
10:39 just wanted to see how I can solve
10:41 problems and I guess this is what also
10:43 happened to you right so they during the
10:46 interview they just asked they just
10:48 checked that you know some things and
10:50 then maybe they didn't care much whether
10:52 like you know python very well or not
10:54 that's right so specifically at salando
10:56 we have something called tech radar
10:59 which is uh an idea that I think was
11:02 initially invented by thoughtworks it's
11:04 a consulting company and it's a map of
11:08 different languages libraries and Tech
11:10 tools that we're using in the company
11:12 and I don't know when in what year did
11:15 you apply to zalando because uh what do
11:18 you remember
11:21 yeah
11:22 I don't know seven six years ago but I
11:25 had like multiple interviews with them
11:27 so of course we changed it a bit since
11:30 then uh when I was applying that was six
11:33 years ago
11:34 um zalando gave much more uh freedom to
11:38 teams to choose pretty much any language
11:40 uh the team wanted since then we
11:44 realized it leads to a bit of chaos when
11:47 for example we have a team that is using
11:48 Haskell and then another team is using
11:51 rust and um it doesn't scale very well
11:54 and so it gives you that freedom so
11:57 since then we focus on preparing this
11:59 decorator which has a list of languages
12:02 that are encouraged in the company
12:05 and right now the list is more limited
12:07 so Java is definitely still their python
12:10 JavaScript typescript
12:13 um for mobile development I think Swift
12:15 is there I'm not sure because I'm not
12:17 doing that anymore but the list is
12:19 definitely more limited than before so
12:21 you'll still have freedom and most
12:23 likely you will try and work with
12:25 different languages but the list is not
12:28 unlimited as it was before so if you're
12:31 a huskyland disaster maybe it's not the
12:33 right place for you right
12:35 I'm pretty sure we still have some
12:38 Legacy Haskell code but um it's not
12:41 encouraged anymore okay
12:44 um I wonder why
12:46 uh I know I got to know one person at
12:50 the land actually he was even
12:51 interviewing me who is a huge fast
12:53 hostel fan
12:55 um but it's difficult to hire people who
12:58 know husk it's one of the reasons yeah
13:01 okay and so he joins Orlando is a full
13:04 stack engineer then you worked in data
13:07 governance and then you eventually
13:08 switched to ml platform right as a
13:11 software engineer
13:12 can you tell us more about what you do
13:15 in this ml platform team
13:17 or you did right so because now you said
13:19 you're an internal consultant maybe you
13:21 can just tell us about your journey from
13:23 that part in more details so it's still
13:26 the same team ml platform team but
13:29 within that team we have three smaller
13:31 sub teams or groups so I was first
13:35 working as a software engineer and the
13:38 primary product of my team was something
13:41 called the set flow it's a python
13:43 library that we are using as a base
13:46 building block for machine learning
13:48 pipelines and I spent two years doing
13:50 that
13:50 and last year I switched rows a bit so I
13:54 still stayed within the ml platform team
13:56 but now as a consultant I teach people
13:59 how to use that flow so for example I
14:01 conduct trainings I also do a lot of
14:04 user support and Consulting in a way of
14:07 understanding user problems and then
14:09 helping them to architecture their
14:11 pipelines and solve any issues they may
14:14 have either with our products or with
14:17 AWS tooling which is another building
14:19 block for us
14:22 so how did you end up being a consultant
14:24 is it something that you saw that I
14:27 don't know data scientists do not know
14:28 how to use Ziploc that flow and then you
14:31 saw the need to teach them or how it
14:33 happened
14:34 so we had Consulting teams
14:38 Consulting team from early on and the
14:41 reason for that is that and very often
14:43 with internal products you build
14:45 something but it's not very well
14:47 supported and we wanted to avoid this
14:51 mistake and that's why from the very
14:53 beginning we put a lot of effort into
14:56 things such as documentation which is
14:58 another thing that Consulting team helps
15:00 with and training and onboarding and
15:04 then user support so we didn't want to
15:06 just launch it and hope that people will
15:08 use it and like it
15:12 we want these users to be happy with the
15:14 product and that's why we have the
15:16 Consulting team and I must say that I
15:20 like this about I like solving problems
15:23 and I must say as a engineer working on
15:26 that flow I understood some parts of it
15:28 very deeply but I didn't have a big
15:31 picture I didn't know how people are
15:32 using that flow what are the challenges
15:34 they have so definitely it also expanded
15:37 my Horizon and let me learn new things
15:41 some people say that's the best way to
15:43 learn something new is to teach it so
15:46 that was definitely the case with me I
15:48 also like saying that
15:51 so that's that's true I think so what
15:54 does your day look like as the
15:56 consultant what do you do usually
15:59 yes so most of it is user support and
16:02 it's a kind of responsive role so we
16:06 have several chats where we answer
16:08 questions and sometimes the questions
16:11 are quite easy to answer but usually not
16:14 so if someone comes to us it means that
16:18 probably they already checked our
16:19 documentation and they have more
16:21 advanced program which requires going a
16:23 bit deeper
16:24 and because we work mostly remotely
16:28 usually I just have a call with the
16:31 member of the team who has this problem
16:33 and we debug it together
16:35 that's one thing very often if I see
16:38 that it's a problem that happens over
16:40 and over again
16:41 or maybe resulted from a lack of clarity
16:44 in our documentation I would just fix
16:46 the documentation
16:47 sometimes and there is a bug discovered
16:50 in the process so if it's something
16:52 small I would give another concept and I
16:54 will try to fix it but usually I will
16:56 just talk to the development team and
16:58 they will fix it
17:00 uh what else and then we have trainings
17:03 so some trainings uh are already
17:06 happening and there is
17:08 quite a lot of work involved with that
17:10 because it's not only a passive
17:12 presentation but we try to do it in a
17:15 very interactive way so people have to
17:17 do their homework and they have to
17:19 prepare and then during the training and
17:21 they do a lot of exercises and I also
17:24 try to follow up with them later if they
17:28 struggle with a homework for example if
17:29 they don't understand something
17:31 so that's the typical set of tasks I
17:35 have to do I guess you need to prepare
17:38 all the materials for the trainings
17:40 and how much Hands-On is what you do
17:43 like I mean how often do you actually
17:45 need to you know go and code
17:48 not so much not so much I must say so
17:51 um I think this is a bit of a
17:53 disadvantage that I don't go especially
17:56 when it comes to more complex problems I
17:58 consult them anymore as a consultant
18:00 compared to my previous role as a
18:03 software engineer
18:05 um so I still
18:07 submit pull requests but usually there
18:09 are documentation fixes and I also don't
18:12 want to step over competences of my
18:15 colleagues in the platform team who are
18:18 actually building this so it's not so
18:21 much on Hands-On coding
18:23 okay and now you're on a sabbatical yes
18:28 so can you tell us more what do you do
18:30 when you're sabbatical
18:32 so this is a three month sabbatical
18:34 January February March
18:36 I have to say that when I took it my
18:38 intention was to stay away from
18:40 technology as much as possible because
18:42 I've been working in Orlando for five
18:45 and a half years and as a software
18:47 engineer much longer than that and I
18:50 thought I need a break
18:51 the thing is um most of my plant
18:54 activities were non-technically
18:57 let's say focus on my hobbies but
19:00 especially last year and current period
19:03 is so exciting in my opinion in
19:05 technology especially in our field in
19:07 machine learning that I have to say that
19:10 um I still touch and try and play with
19:13 some things so especially last year
19:16 three most exciting things for me were
19:20 um diffusion models so I'm not a data
19:23 scientist this is not my background so I
19:26 don't claim to understand the papers
19:28 even though I looked into them and I
19:31 even gave internal presentation in the
19:33 team about how they work but I only have
19:35 high level understanding of that
19:37 but especially as a front partner
19:40 front-end engineer and someone
19:41 interested in graphics I find it
19:44 extremely exciting and then towards the
19:46 end of the year there was a release of
19:49 chat GPT which is also extremely
19:52 exciting and
19:54 um even as a user as a software engineer
19:57 or someone who works in Tech I think
20:00 this has a huge potential to change our
20:02 jobs we can also talk about that
20:06 um so I definitely look into that
20:08 and then there is something that this
20:11 also partially related to what we do in
20:14 machine learning space and that is
20:16 running code in the cloud and I was not
20:19 paid to that but there is a small start
20:20 that I'm very excited to mention it's
20:23 called Model Labs it's something funded
20:26 by Eric bernardson so he's a person who
20:30 work on initial Spotify recommendation
20:33 algorithm he is also the original author
20:36 of Luigi and modern Labs is his latest
20:39 project you can think about this as a
20:43 very easy way to run your local code in
20:46 the cloud without worrying about
20:47 infrastructure about provisioning
20:49 Hardware
20:50 idea is that you write your python
20:54 script
20:55 you execute one command to run it and
20:57 then it runs in a cloud so it's a bit
20:59 like AWS Lambda but it's much easier to
21:03 use and they also made it very
21:05 performant so this is something that I
21:07 started to play this week and hope to
21:09 dive a bit deeper during my sabbatical
21:15 so do you still have time for
21:17 non-technical plans or that takes also
21:21 to say I'm striving I'm trying to prove
21:23 that because this three months sounds
21:25 like a lot but with my to-do list it's
21:28 really hard to fit everything in so it's
21:32 a bit difficult yeah well I took two
21:34 months and it just I didn't notice how
21:36 these two months passed it was just you
21:38 know I blinked my eyes
21:40 and yeah it's over go back to work so I
21:45 drew the line that I don't want to touch
21:47 things that I do in my daily job at
21:49 Toronto so if at some point I will find
21:51 myself editing iron policies then it
21:55 means that they crossed the line and
21:57 it's too deep into what they do
22:01 so you wanted to you said that you're
22:03 quite excited about chat GPT as a
22:05 developer and he wanted to talk more
22:07 about that so I when I saw Chad DBT I
22:11 was blown away like it was like wow so
22:14 cool and now I use it for a lot of stuff
22:18 mostly around content generation so like
22:21 for posts on social media for I don't
22:24 know podcast summaries for like a lot of
22:27 stuff in datadox club I also talked to
22:30 it sometimes like I don't know for
22:31 example I read a book recently and I
22:33 wanted to talk about the book with
22:35 somebody
22:36 the so I talked to the chatbot right it
22:39 was pretty fun so I tend to use it very
22:44 often and recently it was actually down
22:45 for a day and it was like okay what do I
22:48 do now
22:49 so I wonder like how do you see how do
22:52 you use it how do you include it in your
22:53 workflow what does excite you about that
22:57 so I'm still on the stage where I
22:59 discover what it can do and it's hard to
23:03 find something that it cannot do so it
23:05 can work
23:06 um like the way I imagine this now or my
23:09 metaphor for this is if you know data
23:12 from Star Trek next Generation or Jane
23:15 this assistant that the main character
23:18 from Ender's Game had in his gear so the
23:21 super smart artificial intelligence that
23:23 you can talk about
23:25 um anything with it and it will give you
23:28 pretty good advice so
23:31 I think we are just still just
23:33 discovering what it can do so for
23:35 example it can do coding pretty well so
23:39 if you are stuck with a blank entity
23:41 screen it's excellent to just describe
23:43 what you wanted it will give you a
23:45 decent answer
23:46 um what was very surprising to me is
23:49 that it can also work as a sparring
23:52 partner for architectural discussions so
23:55 me and also some of my colleagues from
23:57 the team we gave it pretty Advanced
23:59 questions for example about Amazon stage
24:02 maker and I am policies and it gave very
24:07 good answers so here there is a bit of a
24:10 danger because on one hand
24:12 these are very good answers that
24:14 sometimes are difficult to Google
24:16 because maybe nobody else asks this very
24:18 question exactly on stackoverflow but it
24:21 still required that you bring some
24:24 knowledge and experience to validate
24:27 this answer because sometimes it speaks
24:30 with confidence but it's actually wrong
24:32 so we've been me and my colleagues in
24:35 the team were generally impressed by
24:37 this
24:38 but we still know that you cannot trust
24:41 it 100 on the other hand you can also
24:44 say that if you talk to a fellow human
24:46 even if it's an experienced software
24:48 engineer they also make mistakes and so
24:51 it can also be overly confident right
24:52 and it's definitely they can feel overly
24:55 confident in fact sometimes even more
24:57 than judge GPT
24:59 um for example one of the questions I
25:02 asked was also answered on stuck
25:04 overflow and it was pretty highly voted
25:07 reply but um
25:10 I don't think it was very good answer
25:11 and the answer I got from GPT was more
25:16 humble balanced and rich in scope
25:20 so that's one of the things I use it but
25:24 um like you I also tested this with just
25:27 general content creation so things that
25:29 are not technical you can use it as a
25:32 friendly poet it can write songs not
25:34 only in English but also for example in
25:36 Polish or Russian
25:38 it can be a therapist and you can also
25:43 talk about books so for example it can
25:45 give you summary of pretty much any book
25:48 that was written in the last decades
25:50 especially the classics but also rather
25:52 than your books interesting actually I
25:54 asked it to give a summary of a book and
25:56 then said no I don't want to do this
25:58 like I like it just said like I'm not
26:01 good at doing summaries but I can talk
26:03 about the topic of this book
26:05 I like let's let's talk about that so it
26:09 could depend on a book I tested this
26:11 probably one book and um I kind of it
26:15 depends on how popular the book is right
26:16 yeah so the book I tested specifically
26:19 was the intelligent investor it's a book
26:21 about stock market investing and it's
26:22 pretty old so it's uh from I believe
26:25 1949 so it's been around for a while so
26:28 maybe chat GPT was more confident in
26:31 thinking about this book
26:33 so how do you actually use it for during
26:35 your sabbatical
26:37 because um I guess these These are the
26:39 examples right so you talk to it uh like
26:43 discuss books and so on right
26:46 yes so uh I still didn't fully I have to
26:50 say I didn't fully Incorporated this in
26:52 my daily life uh I think it will be more
26:55 and more of that
26:57 um
26:58 right now
27:00 I think the ux is especially for
27:02 specific tasks it's not perfect so for
27:04 example if you want to write code
27:07 um Google not Google pickup pilot has
27:10 slightly better ux because it's just
27:12 integrated with your ID
27:14 um it's a bit more cumbersome to use
27:16 strategypt
27:18 but I would say I'm still in the face of
27:21 Discovery
27:22 um for example if we can add it to show
27:26 nodes but there is one person I highly
27:28 recommend to follow on Twitter his name
27:30 is
27:31 um Riley good side and he's possibly the
27:34 first person in the world who was hired
27:36 as a prompt engine here so the person
27:38 whose main job is to write his prompts
27:40 to talk to Ai and he's sharing a lot of
27:43 his findings on Twitter and he's
27:45 demonstrating for example how to trick
27:48 um these large language models into
27:50 something absurd but he also
27:53 demonstrates what are the possibilities
27:55 and I think we're still in the face
27:57 where we are just learning what it can
27:58 do
27:59 and
28:01 I think we'll discover much more this
28:04 year
28:05 so now everyone gets on the on the hook
28:08 from open eye and then once they make uh
28:11 get paid then yeah personally I look
28:14 forward to the moment and they will
28:16 start charging for that because uh
28:18 currently it's down pretty often so I
28:20 will pray too
28:22 okay assuming that the price is
28:24 reasonable but uh I think it would be
28:28 better for a user experience maybe I
28:30 could also have some free version for
28:32 let's say students or open circuits yeah
28:34 they recently sent or at least I don't
28:36 know if it's them or somebody else I saw
28:38 a form where they were asking like how
28:41 much are you willing to pay how much is
28:43 expensive for you how much is cheap and
28:45 I thought like no I'm not telling you
28:48 that yes because otherwise too expensive
28:51 Maybe
28:52 I thought about the same that I think I
28:54 would be willing to play quite a lot but
28:56 uh let's see how much they will decide
28:58 to charge
29:00 okay so going back to your background
29:03 you have a quite quite a diverse
29:05 background you tried many many things do
29:08 you think it helped you with your career
29:10 for generating new ideas for seeing new
29:13 Solutions
29:14 and how did it help you
29:16 I think generally yes so like everything
29:19 in life discuss pros and cons so the pro
29:22 is that it allowed me to transfer
29:25 different skills from my past jobs uh
29:27 into nuance and I think sometimes it's
29:30 just easier to start a new role where I
29:33 can just borrow from my past experience
29:35 so
29:37 I like to think about technologies that
29:39 are good investment over long term that
29:42 I can transfer across different jobs so
29:44 I mentioned a couple of them so for
29:46 example SQL is one of them
29:48 another one
29:50 is git so it's so basically these are
29:53 things that follow the
29:56 rule of the longer something has been
29:58 around
29:59 the more likely it is to stay for a long
30:02 time I think there is a name for that
30:03 it's called Lindy effect it's named
30:07 after restaurant from New York that
30:08 existed for some time it was Scotland is
30:11 and just the fact that it existed for a
30:13 long time is that it's more likely to
30:15 stay around so I try to look at the
30:18 things that existed for a while
30:19 and it gives me more confidence that
30:21 they will just keep working JavaScript
30:24 is another example so now Jasper is
30:26 around almost 30 years old
30:29 and this was definitely one of the good
30:31 Investments
30:32 um another thing that I'm actually
30:34 learning or improving right now in my
30:37 spare time is getting better at Shell
30:39 scripting and just using command line
30:41 tools from a terminal
30:44 and this is something that in every job
30:46 that I work the more I know about this
30:48 the more it pace so I'm trying to invest
30:52 into things that I can transfer so this
30:56 definitely helped from being a
30:58 generalist
31:00 I think also some general principles
31:03 like for example when I join new
31:06 projects I try to First understand what
31:10 the user value how does it help the
31:12 company to
31:14 build something so trying to have a
31:18 product and user-centered view on the
31:21 thing that we are building instead of
31:23 only focusing on technology and I think
31:26 this generalist approach is helping here
31:28 and so these are Pros
31:31 when it comes to negative sites of being
31:34 journalists I have to say that despite
31:36 spending many years as a software
31:38 engineer I just constantly suffer from
31:40 imposter syndrome
31:43 um and uh actually I think it would be
31:45 if you would be a specialist do you
31:48 think you will not suffer you would not
31:50 suffer
31:51 probably people who are experts in
31:55 something like their deep experts they
31:57 also have it because they also have
31:59 major gaps you know they always compare
32:01 it to some we always compare yourself
32:03 with somebody who knows it better than
32:05 you probably yes and it's not a good
32:08 idea to do that this week I talked with
32:10 two friends of mine we used to work
32:12 together on more than one project and
32:14 one of them has been software
32:16 engineering for longer than I have and
32:18 he says that yeah he still suffers from
32:21 imposter syndrome so I think that's just
32:23 something that we have to embrace as
32:25 part of our job that
32:27 regardless how fast you're learning
32:29 technology is moving faster so the gap
32:31 between what I know as a software
32:34 engineer or as a data engineer versus
32:36 what is there it's only going to grow
32:39 unfortunately
32:42 um but one very practical consequence of
32:44 that is that's an experts or Specialists
32:48 they are able to build things faster so
32:52 if you have a good match between a
32:54 product that you need to build and then
32:56 the expertise then this person is
32:58 definitely going to do it faster than
33:00 someone who like me is interesting like
33:03 I'm in my experience it's the opposite
33:05 right because like for a project
33:09 you need usually a white variety of
33:12 skills so it's not just one person
33:14 typically who you need like if it's an
33:16 end-to-end project which needs I don't
33:18 know front-end backhand databases I
33:21 don't know all this all this stuff
33:23 typically like if you're a specialist
33:25 and you know on the back end for you
33:27 it's probably more difficult to
33:30 yeah
33:31 [Music]
33:32 the project is right exactly so it
33:35 depends on the scope so that's why I
33:37 mentioned that if you have a good match
33:39 between what is required for a project
33:41 versus the skills that the team or the
33:44 person brings to the project because
33:46 The Wider the scope of course the expert
33:49 good struggle moreover and it's getting
33:51 outside their area of expertise
33:54 if you have something that is
33:56 threatening the narrowing scope
33:58 then definitely expertise will help like
34:01 I can give you an example lastly over a
34:04 year ago we had our internal API just
34:09 going slower and slower it was not
34:11 really scaling well and some requests
34:13 were taking more than 10 seconds to
34:15 return
34:16 and another database expert I know my
34:20 work around it but I'm not an expert but
34:23 I was tasked with looking into that and
34:26 improving that and
34:28 I think it I spent a couple of weeks on
34:31 that and in the ends we got 10 times
34:33 speed up in performance by optimizing uh
34:36 our our layer for postgres but I'm
34:40 pretty sure that's a person who is very
34:42 fluent in postgres they would probably
34:44 do it in one day
34:47 what with your background with your
34:50 experience you knew where to look for
34:52 dancers right and then I just took you a
34:55 bit more time to discover to find these
34:57 answers but an advantage is still videos
34:58 right yes well I'm also quite sure that
35:03 some postgres experts would find even
35:05 more than I did yeah of course but
35:08 unfortunately on the team we didn't have
35:10 someone who was supposed to expert
35:13 okay two cons so far imposter syndrome
35:16 and experts can build things faster
35:19 anything else
35:22 I was also thinking how does it affect
35:24 recruiting and finding a job because
35:27 very often I'm I saw that comma is they
35:32 look for experts and sometimes it could
35:34 be a bit scary like you see a job ad and
35:36 you see like we want
35:38 I hear some experience with a large
35:40 language models and you have to be an
35:42 expert in this and that and sometimes
35:44 it's just impossible to meet all of that
35:48 but
35:49 there is this common advice that there
35:52 often should apply for jobs even if you
35:54 don't meet every criteria and I think
35:56 it's a good advice because
35:59 in every role in every company where I
36:01 was hired I had to demonstrate some
36:04 expertise but in the end I was doing
36:07 almost entirely different things so for
36:09 example I was hired at Salon after
36:12 JavaScript interview and then I actually
36:14 learned python on the job at Salanda and
36:17 I didn't have any expertise or any
36:20 experience with data governance or
36:21 machine learning and this is what I do
36:24 right now so it helps to have some
36:27 expertise to get your foot into the door
36:30 but then you should be ready to learn so
36:33 I think many people who are listening to
36:36 us now have heard about this t-shaped
36:38 developer or t-shaped person
36:41 and for those who haven't it means that
36:44 like uppercase letter T you have this
36:47 one stem that goes deep so it's good to
36:50 have one area of expertise where we are
36:52 really
36:53 really good at
36:54 um an expert but uh there's also this
36:57 horizontal bar on letter T so these are
37:01 other skills that you should learn and
37:03 be able to jump and go deeper into them
37:06 if needed
37:07 so what's for you this um the stem the
37:11 you know the vertical part
37:14 and the one that is closest to my heart
37:17 I think it's wet front and and
37:19 everything related to http and
37:21 understanding how things work in the
37:23 browser
37:25 um I also tried to expand it so by now
37:29 it's maybe not letter T because I have a
37:31 few of these then so I like maybe e
37:33 upside down right capital E not sure
37:37 which letter it would be jbm
37:39 um
37:40 for example
37:42 um I got pretty good at using git and
37:45 very often I'm helping my colleagues to
37:48 resolve problems with history with
37:50 freebasing things like that
37:53 um I'm I really also just like shell
37:55 scripting and learning about different
37:57 Unix tools and it's like infinite number
38:00 of them and the more you learn the more
38:02 productive you become
38:03 and then there are some things that are
38:06 maybe less specific to one particular
38:10 technology but
38:11 ability to debug things and for example
38:16 um divide and conquer method for just
38:18 narrowing down where the problem is so
38:21 some things I'm used by my colleagues as
38:24 a rubber duck for rubber like debugging
38:28 for those who haven't heard this term
38:30 sometimes it's very helpful to just
38:33 explain the problem you have to someone
38:35 or something it could be even a rubber
38:37 type that you have on your desk
38:39 explain the problem and after you
38:41 explain it to someone
38:43 the solution just comes to your mind so
38:45 very often I'm a buddy or a rubber
38:48 attack for my colleagues and handling
38:49 debug problems and
38:51 a lot of Engineers prefer to build new
38:54 things instead of debugging and finding
38:56 bugs I'm actually one of the people who
38:59 really like debugging and um
39:05 that's a rare quality usually people
39:07 don't like debugging I don't really
39:10 enjoy it to be honest I think most
39:12 people don't like it I treat it as a
39:14 puzzle
39:16 okay like you're a detective and then
39:18 you're no you know looking for
39:22 um I don't know
39:24 for a solution to Crime right yeah
39:29 yeah that's pretty interesting
39:32 um
39:33 so
39:36 yeah one thing I wanted to ask you is
39:39 what advice would you give to people who
39:42 want to
39:43 be I don't know do something like you do
39:47 change directions often I think maybe
39:50 I'll try to answer based on what you
39:52 discussed so far and then perhaps you
39:54 will add something so from what I you I
39:57 understood from you so you
40:00 say you say that's a it's a good idea to
40:02 invest into fundamental skills skills
40:05 that are transferable transferable like
40:07 SQL git shell script in terminal
40:11 JavaScript then also ability to debug
40:14 things
40:16 um divide and conquer as you said and
40:17 then another thing you mentioned was
40:19 product and user orientation like
40:22 thinking how this does the thing I'm
40:26 working on contribute to the goals of
40:28 the company to user value right so I
40:31 think these two things you mentioned
40:32 that like this is something you can
40:34 invest into and then it will help you in
40:38 when you switch career
40:40 anything else that you think is helpful
40:43 so I try to avoid getting general advice
40:47 because what I learned is different
40:49 people have different career paths and
40:52 before this interview I listened to a
40:54 number of other interviews from data
40:55 talks club and I noticed one thing that
40:58 people arrive in especially machine
41:00 learning from very different directions
41:02 because it's a very new industry and we
41:05 have different experiences but maybe
41:07 there is one general advice I would give
41:09 so especially when you are trying to
41:12 build this t-shape and get one stem
41:14 where you go deeper try to find
41:16 something that you are generally
41:18 passionate about as a individual so this
41:22 will give you a great Advantage if you
41:24 find at least one area where you are
41:26 just generally interested in
41:28 because I found out that people who just
41:32 enjoyed the process of learning
41:33 something and going deeper in that one
41:36 area they will always be ahead of people
41:38 who are just focused on results
41:40 so if you just want to
41:42 I know get a job or finish a project and
41:45 you hate the way to get there
41:50 you'll be in the long term a
41:52 disadvantage compared to a person who
41:54 just enjoys let's say the process of
41:56 writing I am politics I remember I
41:59 listened to one interview when a person
42:02 who talked to said that he's relaxing by
42:05 writing these policies so I'm pretty
42:06 sure he'll be way better at doing that
42:08 than someone who doesn't like it so if
42:12 you as a junior find one thing that is
42:15 really exciting to do
42:17 um try to go really deep into that
42:19 develop an expertise and other things
42:21 that you're less excited about just do
42:23 them as and learn them as you need them
42:25 for your project
42:26 it was an interview with Thomas
42:28 um it was about his uh transitioning
42:31 from data science to data Ops that's a
42:34 very cool interview and yes not many
42:36 people enjoy I am roles and then
42:38 debugging them with a nightmare like I
42:40 don't know how can people enjoy that
42:42 luckily we have people who do enjoy this
42:44 so they can help with this stuff but
42:47 yeah it's
42:48 I guess the main
42:50 root cause of many problems when it
42:53 comes to cloud and AWS is like this in
42:56 properly configure time rolls
42:58 yes it's very common so I think this is
43:01 Thomas superpower that he generally
43:05 interested
43:07 would you suggest buying a rubber duck
43:11 like a physical one yeah
43:14 um that's a good question so I don't
43:16 have one
43:17 I also use my colleagues for that
43:20 purpose so this is also a general group
43:23 advice that if you get stuck with
43:25 something just talk to a teammate and it
43:28 usually helps
43:31 so especially now when we work remotely
43:34 I think I would actively recommend
43:36 against it and I would rather say talk
43:39 to someone
43:40 um right now now that you mentioned this
43:44 I realized that uh chat GPT could serve
43:47 also other deck so for example now I'm I
43:50 started a mentoring sessions with a
43:54 person with just learning programming
43:55 and on the very first meeting I
43:58 recommended her job GPT and use it as
44:01 this assistant when she just wants to
44:04 have a question and we still have
44:07 sessions between my mentee and myself
44:10 but in between she's using chat GPT and
44:13 she's very impressed how well it can
44:15 work as this secondary Mentor so maybe
44:19 this is a better upgraded rubber deck
44:24 um one of my ex colleagues he just
44:26 bought a pack of rubber ducks and put to
44:29 everyone's desk
44:30 and then we still have quite a few of
44:32 them around the office
44:34 I don't use them like even though there
44:37 is a duck near me I don't really talk to
44:39 it because I think it would be weird
44:41 right
44:43 I don't know I just don't feel like
44:44 talking to you like
44:46 on the office
44:50 yeah
44:51 so one thing you mentioned is if you
44:54 enjoy the process of learning you'll
44:57 probably be
44:59 more successful because you will enjoy
45:01 like also doing this thing and I wonder
45:03 like how can you enjoy like is
45:07 what can I do to enjoy the process of
45:09 learning like other tools deep streaks
45:12 that can help me there yes so that's a
45:15 very good question that I also thought
45:17 about myself
45:19 um because sometimes it just feels like
45:21 magic like you either have it or you
45:22 don't and it's difficult to force
45:24 yourself into liking something so I
45:28 think in the beginning especially it
45:30 helps to just let your curiosity drive
45:32 you so if you see something that is just
45:36 interesting to you try to go deeper and
45:39 I think now it's quite a lot of things
45:41 that are out there that could be
45:43 interesting so for example for me such a
45:46 thing was
45:48 um image generation with this uh
45:50 diffusion models so
45:53 in the end I had to stop because
45:55 I'm not going to become a data scientist
45:57 and I'm not going to get the PHD in that
45:59 area but I got relatively deep given
46:02 what I supposed to do just because I was
46:05 really excited about the results and how
46:08 it works
46:09 so let your curiosity Drive in the
46:11 beginning
46:12 that's one advice another one I noticed
46:14 that sometimes just if you force
46:17 yourself for let's say even half an hour
46:19 or one hour to look into something
46:23 basically just start and then very often
46:26 you discover that oh actually it is
46:28 interesting and I would like to learn
46:30 more about it
46:31 and so
46:33 just starting is a good advice and some
46:37 practical tip for that that works for me
46:39 is Pomodoro Technique
46:42 um so if you just know that okay I will
46:44 have to work for 25 minutes
46:47 um then I will have a break so it's not
46:49 so painful and then after 25 minutes you
46:52 discover this is really fun and you just
46:55 keep going on and maybe the last thing
46:58 that I noticed work for me I like to
47:00 listen to podcasts and interviews with
47:02 inspiring people so for example when I
47:06 listen to a few episodes of data talks
47:08 Club
47:09 and I just chose them based on the
47:12 titles of what interests me I felt that
47:14 afterwards like yes I really want to go
47:16 deeper into this because there's a lot
47:18 of enthusiasts from people that you had
47:21 on your podcast
47:22 I'm not sure if I can recommend another
47:25 podcast on this one your competitions
47:29 I'm a huge fan of Lex Friedman podcast
47:31 he started as AI engineer at MIT and his
47:37 podcast was mostly about AI
47:39 so now he's someone who ventured into
47:43 very different areas and he talks to
47:45 people who are not necessarily working
47:47 technology but especially I recommend
47:49 going back to his earlier episodes if
47:52 you are interested in machine learning
47:53 because he interviewed
47:55 a very famous and accomplished people in
47:58 the field and just listening to them can
48:01 broaden your horizons and can inspire
48:04 you
48:05 but
48:06 I would say that inspiration is just
48:09 part of it but in the end you have to
48:10 just sit down and do something yourself
48:13 because you can have all the inspiration
48:14 all the podcast but what matters in the
48:17 end is that you face some of the pain
48:19 yourself and try to build something
48:21 yourself
48:22 So when you say just start and okay I
48:26 have my Pomodoro I put it
48:28 so the clock is ticking and what do I do
48:30 next like for me sometimes it's like I'm
48:33 standing at a blank screen and ah what
48:35 do I do no okay so a while ago I think
48:38 it was harder but for the last two
48:40 months you can just add Church yeah I I
48:43 knew you would say that I mean I
48:46 literally
48:47 do that too now so for example recently
48:50 I was working on a proposal for the pi
48:53 data conference that we have in Berlin
48:55 so soon
48:56 and you know what I did at the end it's
48:59 talk to the child DPT and yeah
49:04 that helped
49:05 I mean people are probably tired of
49:07 hearing Chad DBT by now I mean in
49:10 general there is so much passes another
49:12 answer to that without judging so if you
49:16 get stuck I think it's a general
49:18 skill that's very important for software
49:20 Engineers for people working in Tech
49:22 it's to break down the bigger problem
49:24 into smaller ones so if you have to
49:27 build
49:28 let's say data python classifier just
49:31 try to break it down into smaller things
49:33 to the point where you get until you get
49:37 to the point where you know how to
49:38 implement it if you don't just keep
49:41 breaking down
49:43 but then if it's a new area
49:47 and so people have different learning
49:49 styles so for example now there is a lot
49:52 of really cool tutorials on YouTube if
49:55 that's your style and some people prefer
49:57 reading reading I think is a bit faster
49:59 and more efficient but maybe
50:02 um more involved
50:05 um
50:07 just trying to get anything on the
50:09 screen and even one line of python in a
50:11 notebook or in a script and then usually
50:14 you'll know needs to be done next
50:18 starting is always the hardest part yeah
50:20 right and when we were talking about the
50:23 cons of being a generalist you mentioned
50:25 one thing that recruiting might be a
50:27 problem
50:28 and I was thinking why is that so from
50:32 what I see sometimes when somebody
50:35 leaves leaves a company
50:37 a hiring manager like the manager of
50:40 that person wants to hire the exact same
50:42 person with the exact same skills so
50:44 what they do is they come up with a job
50:46 description they're just okay what this
50:48 person was doing let's just put all that
50:50 there like okay that person had another
50:52 five years of spark experience let's
50:54 just do the same thing and then at the
50:56 end we see a job description that looks
50:58 like exactly what this person was doing
51:00 and then of course it's at the end it's
51:02 not possible to hire
51:04 the same like a clone of that person
51:06 right
51:08 um and then at the end like hiring
51:10 managers
51:11 compromise right and then okay like they
51:14 don't know spark whatever it's easy to
51:16 uh learn it anyways right or not easy
51:19 but like we will help them learn this
51:22 um do you think that's uh the only
51:24 reason why we have these positions uh
51:26 these job descriptions that look like I
51:29 don't know super experts but there are
51:31 other reasons
51:33 so I have to say that Atlanta I'm quite
51:36 fortunate because people who are writing
51:39 these job descriptions are usually aware
51:41 of this problem and
51:44 at zalando we change
51:47 quite often and it's expected that
51:49 people will learn different things so we
51:51 try to avoid being too narrow and most
51:53 of the job descriptions I have seen are
51:56 sufficiently flexible where it's coming
51:59 from
52:00 I hope
52:02 it will disappear because technology is
52:04 changing so fast that you just shouldn't
52:07 focus on something that is too narrow if
52:10 you want something super narrow maybe
52:11 you don't need a full-time employee just
52:13 a consultant to solve one specific
52:15 problem but if you are investing in a
52:17 person for a longer periods of time it's
52:20 more important that someone who is
52:21 flexible who can put something together
52:24 and build it Robert and having just once
52:27 this narrow set of Skips
52:29 dude at the end it doesn't look like a
52:31 big disadvantage because there are
52:32 companies who realize this and try to
52:35 put rather broad job descriptions right
52:40 and if I'm a generalist and I want to
52:43 apply to a job position that looks like
52:46 an expert job description I just apply
52:49 right and then let them decide
52:52 yes so just try in the interview
52:55 um of course it depends because people
52:58 have sometimes
53:00 it is understandable that the company
53:02 wants an expert so if you work on maybe
53:05 not using some existing model but you
53:07 want to build a new machine learning
53:09 model maybe a PhD in a relevant area is
53:13 actually someone who want but then of
53:15 course the closest it could be harder to
53:17 hire the right person
53:20 and I'm thinking about an example from
53:22 olix so when we were looking for a
53:24 person to join our recommender team and
53:27 we were like building a new team from
53:29 scratch for that
53:30 we thought like okay like if we want to
53:33 hire somebody senior
53:35 in that for that team like that person
53:37 should have experience with recommender
53:39 systems right maybe others are not a
53:42 must but like this one is a must so then
53:44 like you kind of need
53:45 I guess this t-shaped profile right
53:47 where the T the stem is the recommender
53:50 recommenders experience
53:53 so yeah probably depending on the needs
53:55 of the team like sometimes you just need
53:58 a particular set of skills and they are
54:00 must yes well I think it's getting a bit
54:03 easier in the area of ml because even
54:06 just three years ago it was so such a
54:09 new field that it was harder to find
54:11 expert but now let's say if you want
54:14 someone with a recommender system
54:16 experience it will be easier to find it
54:18 to find such a percent than just years
54:20 ago
54:22 okay so in general do you think
54:25 companies are looking more for
54:26 generalists or for experts because from
54:29 what I hear from you like okay zalanda
54:31 is brought in the job descriptions and
54:34 from what I see it what we do at two
54:36 weeks with also don't usually hire likes
54:39 super niche
54:41 um for a super Niche set of skills like
54:43 what do you think in general
54:46 it really depends so
54:49 um if sometimes the companies they have
54:51 very specific objective to achieve and
54:53 they need experts and salando is also
54:56 sometimes in need of specific expertise
55:00 um maybe it's also my personal survival
55:03 bias that I tend to gravitate towards
55:06 roles where they require broader set of
55:08 skills because that's what I can bring
55:10 to the table
55:12 um I wouldn't worry about this uh if I
55:14 was on a job market just try to develop
55:17 something that you like
55:19 and then develop this horizontal bar in
55:23 the letter T to look slightly around
55:26 your core area of expertise and
55:30 we are still in general as a tech
55:32 industry in the lucky situation where
55:34 there is still a lot of Need for people
55:37 especially in the field of data and
55:39 machine learning
55:41 so focus on something that is
55:43 interesting to you
55:44 okay
55:45 yeah which today I guess is uh
55:48 sounds easy but sometimes there are so
55:50 many things
55:51 right what is interesting for me if
55:53 everything is interesting
55:55 and this is something I struggle with uh
55:58 so you also have to learn like this is
56:00 the opposite problem of what we're
56:01 thinking about like you also have to say
56:03 no to
56:04 um
56:05 yeah like coming back to our discussion
56:07 about your sabbatical plans right yes I
56:10 definitely have too many interests
56:12 for the limited time I have
56:15 do you have any how do you deal with
56:17 this do you have any suggestions like
56:20 what does work for you what I do is I'm
56:23 a huge fan of to-do list and then if you
56:26 just write down everything that is on
56:28 your mind so just try to capture it and
56:30 then you can prioritize and then you can
56:32 also just
56:34 drop some things on the list
56:36 does it um like to me sometimes to-do
56:39 lists feel like procrastination so I'm
56:42 not really doing anything I'm just you
56:44 know doing a to-do list instead of doing
56:46 the thing do you have this feeling or
56:50 um it could happen but I think it's even
56:52 worse when you don't write it down and
56:54 it's just this General
56:57 um mess in your head uh when there is
56:59 like 100 different things and you don't
57:00 know where to start and when it's
57:02 written down at least you know okay I
57:04 can do this and the other things will go
57:06 down in priority
57:08 I'm not sure if it's related but what I
57:11 noticed that helps for me is having some
57:13 sort of deadlines and then making
57:15 um
57:17 like some doing some sort of project
57:18 work instead of uh like I don't know
57:21 let's figure out how
57:22 stable diffusion works like let's figure
57:24 out how I can use for solving for let's
57:28 figure out how I can use it for solving
57:30 a specific problem
57:32 I don't know like maybe for stable
57:33 diffusion it's a bad example but usually
57:35 like there is a new piece of technology
57:36 I want to try I give myself I don't know
57:39 a couple of days
57:41 and then it kind of helps to you know
57:43 stay focused on this specific thing I
57:46 think deadlines definitely help
57:48 um there is this saying that if you have
57:51 a software engineering task it will
57:53 stretch to the time you allocate it so
57:56 yeah sometimes if you allocate less time
57:58 it will force you to focus and say no to
58:01 other things
58:03 and do you have any book or other
58:06 resources that you want to recommend to
58:08 the listeners
58:12 um I thought about this so
58:15 um right now I noticed that especially
58:17 in the last 10 years or maybe even less
58:20 like when with the Advent with the
58:23 Advent of deep learning and machine
58:24 learning it's harder to learn from books
58:27 because things are moving too fast so in
58:31 my personal experience as a software
58:32 engineer
58:33 sometime ago there were books that were
58:36 General like for example
58:39 um clean coat was definitely influential
58:42 book I really liked it the pragmatic
58:45 programmer is another classic
58:47 um
58:48 years ago there was a second edition
58:50 that is more updated I would recommend
58:52 this one so these books they teach you
58:54 skills that are transferable to other
58:56 areas however
58:59 um they are mostly aimed at software
59:01 Engineers so not everyone from our
59:03 audience will be super
59:06 focus on this this area right now I
59:09 would say I learned more from YouTube
59:11 and tutorials and just finding things as
59:15 I need them
59:16 a colleague of mine when I was new to
59:19 Amazon sagemaker recommended to just go
59:23 through documentation
59:24 I'm not sure if it's always a good idea
59:26 I downloaded videos
59:28 it's 3000 pages
59:31 so here I would rather recommend just
59:34 look up things as you need them and I
59:37 don't want to sound very boring but chat
59:39 repeat is again amazing resorts to
59:43 poke and get general idea especially
59:46 when you get start and you don't know
59:48 when to
59:50 write the first line code
59:52 we have for your favorite YouTube
59:54 channel
59:57 um so with programming
1:00:01 not really uh I'm outside of a tech
1:00:05 Maybe
1:00:07 outside of tech uh I
1:00:10 but it would be completely outside so uh
1:00:13 I my other hobby is photography so look
1:00:16 at some photography channels I like that
1:00:18 uh
1:00:20 um yeah they're pretty far from what
1:00:22 we're discussing here
1:00:24 well if you're interested maybe drop
1:00:26 give us a link and then we will put this
1:00:27 in the show notes and if anyone is
1:00:29 interested in photography too sure
1:00:32 yeah okay that was fun thanks for
1:00:34 joining us today and thank everyone too
1:00:37 uh for joining us today and listening uh
1:00:39 to our conversation that was a lot of
1:00:42 fun thanks stuff for sharing all your
1:00:44 experience with us for giving us advice
1:00:47 and yeah
1:00:51 thank you for having me and have a great
1:00:53 question