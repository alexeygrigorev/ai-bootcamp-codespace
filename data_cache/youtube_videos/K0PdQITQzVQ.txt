0:00 hi everyone Welcome to our event this
0:02 event is brought to you by datadoxlab
0:04 which is a community of people who love
0:05 data we have weekly events
0:08 and I think this is this will be one of
0:11 the last events this year
0:14 um yeah so holiday season is coming so
0:17 anyways if you want to find out more
0:19 about the events we have there is a link
0:21 in the description go there click on
0:24 this check it out
0:25 and do subscribe to our YouTube channel
0:27 if you haven't so this way you will not
0:29 miss out events like today like the
0:31 interview we have today and we have an
0:34 amazing slack Community join it if you
0:36 want to hang out with other data
0:37 enthusiasts
0:39 during today's interview you can ask any
0:41 question you want there is a paint Link
0:42 in the live chat so click on this link
0:44 ask your questions and I will be
0:46 covering these questions during the
0:47 interview
0:49 now I will stop sharing my screen
0:55 and open the questions
1:01 and
1:02 I guess we can start if you're ready
1:05 yeah
1:06 you ready
1:07 this week we'll talk about doing
1:09 software engineering in Academia and we
1:11 have a special guest today Johanna
1:13 Johanna has a formal background in
1:17 Psychology and computational
1:18 Neuroscience and she's now about to
1:21 complete her PhD in the field of machine
1:23 learning in clinical neural Imaging
1:26 she's joining us from the University of
1:28 Melbourne Australia where she discovered
1:30 the field of research software
1:31 engineering is adding to in addition to
1:34 doing research software engineering in
1:35 Academia Johanna has contributed to
1:38 several open source projects
1:40 and he is an advocate for open source
1:43 and open science also Johanna is a very
1:47 Avid listener of this podcast
1:50 she wants in a LinkedIn comment
1:53 mentioned that she listened to every
1:55 single episode of this podcast
1:58 and I thought I have to invite here this
2:01 podcast and also you probably heard in a
2:04 few recent ones that the questions were
2:07 prepared by Johanna Meyer and this is
2:10 the Johanna that helps too with
2:12 preparation so it's a big pleasure
2:14 pleasure to have you here uh on this
2:17 podcast hi
2:19 hi
2:20 thanks for having me I'm really excited
2:22 to be here
2:23 yeah thanks for being here so before we
2:26 go into our main topic of doing software
2:28 engineering in Academia let's start with
2:30 your background can you tell us about
2:32 your career Journey so far
2:34 yeah sure and so yeah as you've always
2:36 already mentioned so my Bumble
2:38 background is uh psychology and um
2:42 clinical neuroscience and chemical uh
2:46 yeah clinical the clinical side more so
2:49 I started with a bachelor's in
2:51 psychology but then back then already my
2:53 favorite subjects were kind of
2:55 Statistics
2:57 um the biology subject of psychology and
2:59 also I had an elective that's what I was
3:01 um about artificial intelligence and the
3:03 brain and I found it super interesting
3:05 so I already then started also sitting
3:07 in computer science classes while doing
3:09 psychology and that was in Bamberg in
3:12 Germany I'm German and then I got into a
3:15 kind of
3:16 very elite Masters in Munich that was
3:19 taught a Psychology and Neuroscience so
3:23 I continued there in Munich and I also
3:25 took like classes there which is in the
3:27 German system it's quite easy to just do
3:29 additional stuff compared to the
3:31 Australian system like maybe that's
3:32 something you want to talk about later
3:35 um and then I was when I was in Munich
3:37 um I applied for this um from the bunch
3:39 time that computational Neuroscience
3:41 they have a program where they give you
3:43 between your Masters and your PhD one
3:45 year of funding to go to any German
3:47 universe or any University that you
3:49 really like
3:50 um and I went to the Technical
3:51 University in Berlin where I did some
3:53 modeling for neuroimaging and then to
3:57 the translational modeling unit in
3:59 Zurich where I also did some
4:01 um yeah modeling for neuroimaging like
4:04 auditory stimuli and like in the brain
4:07 basically
4:08 um and like while I was in Zurich I mean
4:10 one of my friends forwarded me a
4:12 position that was in Australia and it
4:13 sounded really cool so I applied for
4:15 this position it was um about creating a
4:18 normative model of the brain and then
4:20 comparing how people with depression
4:22 like score under this normative model
4:24 which basically and it's like modeling a
4:26 biomarker for depression in the brain
4:28 and I applied and I got in and I
4:30 basically I got the position and I
4:32 basically decided within a week that I
4:34 would move to Australia and I was there
4:37 like half a year later because it's like
4:38 you know visa and stuff and I've been
4:40 there ever since so I've been I'm about
4:42 to finish my PhD I'm working already as
4:45 a postdoc in um predicting and profiling
4:48 depression anxiety and schizophrenia and
4:51 also like biological kind of features
4:54 and markers so brain stuff and but also
4:57 behavioral stuff and apart from that
4:58 I've like um done a bit of stuff on the
5:01 side like like you said open source
5:03 projects I've worked for NASA I've
5:06 worked for math math work so let's say
5:08 Matlab kind of company I've contributed
5:11 to open source and I've been a teaching
5:14 assistant and I've LED hackathons
5:17 um and I've done uh studies like
5:19 continued studying um computer science
5:22 um but at German University
5:24 so yeah that's that's basically me
5:26 yeah interesting and as a teaching
5:29 assistant what do you which subjects do
5:31 you teach which oh and yeah it's um it's
5:34 open science so that's also what I do
5:36 like um I'm really into like this or
5:39 like not into but like I'm really
5:40 passionate about this idea to make
5:42 science more reproducible which is a
5:44 huge issue and also relates to our topic
5:46 actually like research software
5:47 engineering because um these are things
5:49 like research social engineering can
5:51 help to make science more producible
5:54 um and uh yeah so yeah so as a teaching
5:59 assistant you need to help with homework
6:01 uh answer questions from students right
6:05 yeah it's actually very funny because
6:07 it's I'm a teaching assistant at a
6:09 university in California so it's remote
6:12 and but yeah we have a slack community
6:15 and I am so they get like um material
6:18 from there on your University and then I
6:21 also watch the materials on YouTube and
6:23 I answer questions and um I had I taught
6:25 some like subjects like for example
6:27 intro to get
6:28 um there was one of them or like
6:30 um yeah how to contribute to open source
6:32 projects
6:34 um and stuff like that it's a bit of
6:35 machine learning is this uh any of this
6:39 is public
6:40 yeah so the um the course that they put
6:44 on is public yeah
6:46 um and uh the teaching stuff not big
6:48 because that's just you know in Zoom
6:50 face to face and yeah yeah but uh yeah
6:53 there's a lot of like free stuff that
6:55 you can get into um so this course is
6:57 also free you can just apply and get
6:59 into and then
7:01 yeah
7:02 so I'm asking because for the courses we
7:06 have in datadox club usually we assume
7:09 some familiarity with Git uh and things
7:11 like this so there are some
7:12 prerequisites and when people without
7:14 this prerequisites come
7:16 to learn from our courses it's a bit
7:19 difficult so the learning curve for them
7:21 is steeper yeah some catch up and finish
7:24 the courses but some do not because they
7:27 have the they need to pick up extra
7:29 stuff in addition to what we we are
7:31 teaching
7:32 and um
7:34 now it's good to know that you teach git
7:36 so we can we know where to send them
7:39 exactly there's also I just recently um
7:42 completed
7:43 um uh how do you say an instructor
7:46 course for the carpentries I don't know
7:48 whether you've heard about the carpentry
7:50 it's like the software carpentries they
7:52 have like scheduled curriculum for like
7:54 this very beginner and computer science
7:57 and software programming and so
7:59 programming um kind of courses so they
8:01 also have an intro to get course it's
8:03 very structured and you can take these
8:05 courses also well like online and I'm
8:07 not basically almost a certified
8:09 instructor I need to teach my first
8:10 course but um yeah these these courses
8:13 people can just go through them like by
8:15 themselves
8:16 um it's open we can put the link in the
8:18 show notes like I think that's a really
8:19 nice beginners
8:21 um yeah place for people to begin
8:24 because it's our very um takes people
8:26 where they are and yeah
8:29 okay and I'm really curious to know to
8:32 ask you now about this open science
8:34 course so
8:36 um I know we plan to talk about this a
8:38 bit later but since now we're talking
8:40 about this so in this open source uh in
8:43 this open science course what other
8:46 things
8:47 students study what are the what is the
8:50 curriculum for this one for this course
8:51 yeah so the first one was kids and then
8:54 the next one so um it kind of it it fits
8:57 with the topic of the of the episode
9:00 actually so there's this idea that about
9:02 the reproducible publication so that
9:04 basically um so the big problem that
9:07 we're facing in Academia is kind of a
9:09 disability crisis so people put out
9:10 papers but then if other people want to
9:12 reproduce their findings it's just not
9:14 possible and like especially my field
9:16 like new Imaging almost
9:18 like almost died from these companies
9:20 like we're still recovering because like
9:22 basically there are papers that say like
9:24 that have the title like why all
9:26 research um findings up to now are wrong
9:28 like stuff like that you know like
9:30 really really
9:31 um sad sad things and so that's this
9:34 idea about the reproducible paper
9:35 basically where you have
9:37 like in stuff like um for example
9:39 markdown um can write like your thesis
9:42 your paper and then like with your code
9:44 basically just send this thing to
9:46 someone and someone can from the data
9:48 from scratch reproduce the paper that
9:50 you submitted so how to do that for
9:52 example
9:53 um how to put your gold on git how to
9:56 um write tests like it's not very common
9:58 in Academia to write tests to make your
10:00 code bulletproof um people are also like
10:03 usually students are not so skilled and
10:06 like
10:07 um writing programming and software
10:09 engineering in general so like their
10:11 code is like yeah let's let's say
10:12 producible like teaching teaching them
10:14 like very sometimes very basic skills
10:17 um but yeah that's that's the idea
10:19 um what else did we teach them yeah open
10:22 source like how to contribute to open
10:24 source projects I think I've said that
10:26 um yeah basically that's it
10:35 this is my cat and she is not very used
10:37 to playing the second fiddle
10:40 not at all and how do you teach students
10:43 to contribute to open source
10:45 do you say okay here's an open source
10:48 project go contributor it's more guided
10:50 I guess
10:51 yeah it's more guided so um I started um
10:54 of course like with kids but then what I
10:56 like to do and what I think really helps
10:58 is like if you do get like in a zoom
11:00 session where where you have like just a
11:02 very simple repo and you teach people to
11:04 make pull requests and you like you know
11:06 you accept them and they see what
11:08 happens you know because git is such an
11:09 interactive tool and it's so hard to
11:11 learn it by yourself
11:13 um so like yeah that's how I teach them
11:15 and then like yeah I show them like
11:17 um we have a couple of like in my field
11:19 a couple of
11:20 um repositories that are not as you know
11:23 big as for example numpy or skincare
11:25 learn you know these three positives are
11:27 massive and like even like skilled
11:28 people get like very overwhelmed with
11:30 how to start but they are like smaller
11:32 repositories for example
11:34 um one of them is the touring made book
11:36 um it's kind of a book on reproducible
11:37 research
11:39 um a typical book um by the Alan Turing
11:41 Institute and people can just really
11:43 easily contribute um because it's like a
11:45 book you know you can just continue with
11:47 text
11:48 um or like you know yeah text and then
11:50 like put some citations usually like
11:52 something that people from Academia are
11:54 familiar with you know like
11:55 um writing a little paragraph and
11:57 putting some citations
11:59 um and and yeah that's that's a very
12:00 good way
12:02 um for people to start and usually
12:03 people are way less intimidated
12:06 um if I show them these resources
12:09 yeah pretty interesting
12:11 so since the topic today is doing
12:14 software engineering in Academia I think
12:16 we more or less started talking about
12:19 this
12:20 I wanted to ask you what is research
12:23 software engineering how the search and
12:26 software engineering are connected yeah
12:29 that's that's a very good question and
12:30 it's actually a very new term so um kind
12:33 of
12:36 um already kind of um indicated is that
12:39 people you know they they have some data
12:41 they make some analysis they write a
12:43 paper and then they forget about the
12:45 data and all the analysis like analysis
12:48 like in some Fields it's done in spsf so
12:50 it's not at all like I don't know
12:51 whether you know what SPSS is but like
12:53 it's more like a GUI thing when you do
12:55 like statistics it's like Excel but more
12:57 powerful right yeah
12:58 IBM use it yeah yeah I think I used it
13:02 in my data data mining classes or
13:05 something like that yeah yeah yeah so
13:07 it's because you click a lot but it's
13:09 not it's not bad you know the models
13:11 that are in there are really good but
13:12 like you click a lot and then yeah how
13:14 would you how would you reproduce that
13:17 um so um and uh this is like a problem
13:23 um and uh
13:25 so research software engineering is
13:26 basically a people who take on like
13:30 doing proper analysis like they really
13:33 focus on their methods and on the
13:34 analysis and that is one part you know
13:36 people who but they still focus on
13:38 publishing papers and the other part of
13:40 research software engineering is people
13:42 who publish software as part of their
13:45 academic output so they don't publish
13:47 papers anymore but they put a toolbox on
13:49 GitHub
13:50 um and uh yeah I think this can really
13:53 help because these two boxes and what
13:55 they produce it's really tailored to
13:56 Academia it's it's done in a very good
13:59 way and yeah these people are really
14:01 passionate about
14:02 um the software I don't I don't say that
14:05 the other people are not passionate
14:06 about the analysis but it's not their
14:08 main focus
14:10 um yeah yeah are there these people who
14:14 publish software as a part of their work
14:16 in Academia are they PhD students or
14:19 they are hired specifically to to just
14:22 program the code no they're usually PhD
14:25 students like PhD students who like I
14:27 for example I've published like not a
14:29 toolbox but like a method
14:32 um that kind of um corrects for side
14:35 effect differences so basically when you
14:36 collect data
14:38 um at different scanning sites you have
14:40 basically differences due to the
14:42 magnetic field strength in the scanner
14:44 or like
14:45 um yeah to the vendor of the scanner
14:48 like just differences and like these
14:49 differences can screw up your analysis
14:51 like I um I published a tool to correct
14:54 for these differences like it has
14:55 nothing to do with the outcome of like
14:58 you know for example the differences
15:00 between like clinical populations and
15:02 like healthy controls that are like
15:04 usually the the kind of topic of my
15:06 field it's really about the the method
15:08 and yeah it's usually people from
15:10 Academia and for me it was really like I
15:13 always thought like I'm this weird
15:15 person who is really interested in these
15:16 like you know
15:18 middle things you know like not really
15:20 the like looking at clinical population
15:22 not really the topic of my field but
15:24 kind of getting there and but then I
15:26 learned like I'm probably a research
15:27 software engineer so I'm just really
15:29 interested in writing research writing
15:32 software as my research output and it
15:34 can also be the other what you said like
15:36 I think this is more and more coming
15:38 because
15:39 um yeah people from from Academia just
15:41 they work in their fields and they're
15:43 forced to write software and sometimes
15:45 they're not really not really interested
15:47 in it so this can also happen and also
15:49 not really skilled so it might actually
15:51 happen that this is coming more that
15:53 hopefully um yeah software engineers get
15:55 hired to do these things yeah
15:58 and when you got hired for this position
16:02 how did position what was the name for
16:05 this position was it the already
16:06 research software engineer or was it
16:09 like no no
16:11 um so um still like we're talking like I
16:14 have three papers three Publications for
16:16 my PhD and like still we're talking
16:18 about like we talk about it we talk
16:20 about the application paper which is
16:22 like where I do stuff with clinical
16:23 operations and a huge data set and then
16:25 the methods papers we call the methods
16:27 paper but it's really just it's like
16:29 writing software and yeah yeah I see so
16:33 you still need to publish papers right
16:35 yeah that's the other thing so that's um
16:38 what um we are kind of hoping that is
16:41 also coming that you know this um like
16:43 software as research output is more and
16:45 more hopefully
16:47 um acknowledged as output um so for
16:49 example you can now get a DOI you know a
16:51 digital identifier for your software as
16:54 well
16:56 um and um but yeah you usually I mean
16:58 most people are happy to kind of publish
17:01 a manual like paper or something like
17:03 that it's just like they don't
17:04 necessarily want to
17:07 um yeah publish in their field anymore
17:10 yeah and I'm curious how do you convince
17:13 a professor your professor to let you
17:17 work on uh software instead of
17:20 publishing papers because I guess many
17:22 professors are used to
17:24 only one kpi this is the number of
17:27 papers published by their department and
17:30 probably like uh it should be like I
17:33 don't know IA star conferences or
17:35 whatever like you know high impact
17:37 Publications so how do you go to them
17:40 and convince that hey doing papers is
17:44 good but like you know we also need to
17:46 to publish some software
17:49 yeah it is very hard and um there are
17:53 definitely people like pis that are more
17:55 willing to do this and some are less
17:57 willing to do it
17:59 um so um I was relatively lucky that my
18:03 supervisor um she kind of we we actually
18:06 we ran into this problem and I made it
18:07 one of my
18:09 um one of my topics and I'm very happy
18:11 with it and that she let me do this so
18:13 but I have a really good supervisor so
18:15 she's very flexible
18:17 um but yeah that's that's an issue and
18:20 um often people do it in their free time
18:21 because they're really interested in it
18:24 um which shouldn't be the case you know
18:26 but um yeah or like I mean in Academia
18:29 it's also I don't know whether you know
18:31 that but like Academia is very um has
18:33 lots of fluctuations so like the uh the
18:36 contracts are very short
18:38 um so you know if you don't like it
18:39 where you are you just move
18:42 um yeah yeah but if you just move them
18:45 you have to start your PhD research from
18:47 scratch
18:48 yeah that's true yeah you should yeah
18:51 that's true I mean um after that you
18:52 know yeah yeah
18:55 so it's more like bottom-up approach
18:57 when PhD students approach their
19:00 supervisors and say look like we really
19:02 need to like there is this problem in
19:04 our field we really need to to make our
19:07 research reproducible does it happen top
19:10 down like when professor says okay
19:12 listen everyone now in our department we
19:15 all care about reproducibility
19:18 um I know some professors like wanted um
19:21 I think Stanford who started kind of
19:24 this whole idea he definitely does that
19:26 um but it's less common and one reason
19:28 for that is that many like people who
19:30 are in pi positions they just didn't
19:32 grow up with
19:34 software or like analysis like we do now
19:36 in general they're a bit more scared of
19:39 it and they have also they have less
19:40 less time you know they are not doing
19:42 the analysis anymore so
19:44 um yeah it's definitely it's definitely
19:46 a problem but like on the other hand
19:48 side like it's um there's you say like
19:51 it's a grassroot approach
19:52 um and also like these um hackathons
19:54 that we organize they try to teach
19:57 people and like pull people in from the
19:59 bottom
20:00 um to to apply these um principles yeah
20:04 yeah
20:05 what you are talking about reminds me
20:08 the state of data science like 10 20
20:11 years ago when it just started
20:13 and in Industry companies would hire
20:17 data scientists who are just fresh from
20:19 Academia like people with PhD very smart
20:22 people with PhD in physics mathematics
20:24 and so on
20:25 and they would tell them okay now there
20:28 is this data set that we have now go
20:30 figure out how to make it valuable right
20:33 and then uh it didn't work out so then
20:37 companies realized that just hiring
20:39 academics is not enough we actually need
20:41 software engineers and now data
20:43 scientists are usually
20:45 it's expected that they know how to
20:47 program they know Git You know all these
20:50 reproducibility things
20:53 um and also we have machine learning
20:55 Engineers data Engineers right so all
20:56 these Engineers that help data
20:58 scientists do you think it's uh like I
21:00 got it right it's similar in a way
21:03 yeah but I I think like we are still
21:06 like yeah like you said it's like a bit
21:08 like 10 years ago so I think we are at
21:10 The Verge um and it's it's inevitable
21:12 because the digitalization is just
21:15 everywhere you know regardless of which
21:16 field you're in even like in Humanities
21:18 or like social scientists at some point
21:20 you will have to do analysis and some
21:22 points someone will ask you to be able
21:25 to reproduce it
21:26 um so I think yeah it's coming but it's
21:28 it's also um it's it's very interesting
21:31 because I also think like really
21:33 um industry or like also other fields
21:35 have already solved a lot of the
21:37 problems that we're still facing for
21:38 example like I attended the um the
21:40 machine learning Zoom camp and like ml
21:44 flow you know it's great I've never
21:46 heard about this before you know it's
21:48 like um if you don't look out like if
21:51 you don't search yourself as like a
21:53 scientist
21:54 um yeah Academia doesn't teach you
21:57 um it's really
21:59 um like uh people have to add that the
22:01 scientist has to take the initiative at
22:03 the moment and it's not good yeah it
22:06 should be more it should be more top
22:07 down but it's not yeah do you now usable
22:10 phone your experiments yeah I really
22:13 like it it's very useful
22:16 why do you think Academy is behind why
22:18 nobody's teaching these things
22:21 yeah I think
22:24 many pis
22:26 really didn't grow grow up you know in
22:28 your academic career with this so for
22:30 them and they're coming from an era
22:32 where it was really okay if you just
22:34 published a paper and like burned your
22:36 analysis you know nobody else would
22:38 nobody would ever ask you about this you
22:40 know
22:41 um and but the other thing is like like
22:43 I said that it's now um
22:46 um yeah the other thing is like that we
22:48 have this problem that the
22:49 digitalization of any academic field is
22:51 there but the people that work there are
22:53 actually more interested in their topic
22:55 you know someone who does like I don't
22:57 know
22:58 social sciences or like some Humanity
23:00 field like they don't want to do
23:02 analysis they want to work on whatever
23:04 like a social worker for example they
23:05 don't want to they don't want to deal
23:07 with t-tests and statistics and modeling
23:09 they want to care about people
23:11 um but they are now forced to do this
23:14 um yeah and I think that's that's the
23:16 problem that people are sometimes a bit
23:17 reluctant they're also a bit scared you
23:19 know they work like in a different field
23:20 and now they're kind of forced to do
23:22 this and it's it's also it's also it can
23:24 also be scary you know you put out work
23:27 and then you basically give people
23:30 um like everything and they can say like
23:32 they can find errors you know they can
23:34 say like your analysis is wrong and then
23:35 you have to reject it and reject the
23:38 paper that you've been working on for a
23:40 year or something you know it can be
23:41 scary
23:42 um but in the end I think yeah it would
23:44 bring it would help Academia
23:46 um to kind of make this like yeah have
23:49 to kind of enforce repositibility like
23:52 throughout yeah
23:53 and what do you think is still missing
23:56 like what kind of tools like ammo flow
23:59 you want to adopt in Academia or you
24:02 think you should adopt in Academia to
24:05 to solve these problems or at least
24:06 start solving them
24:09 um yeah tests tests I've never seen
24:11 right anyone writing tests it's just not
24:14 common at all and then like the idea of
24:17 this reproducible paper I think that
24:19 would be really good but the problem
24:21 that I have I'm desperately trying to
24:24 find a space where to host it
24:27 um because you know if you put it on
24:29 Amazon or whatever like AWS you have to
24:31 pay for it and you have to like for
24:33 example like I make a figure and I want
24:34 people to be able to interact with this
24:37 figure you know this is like easily
24:40 possible like in Python you can do that
24:42 locally on your computer like you know
24:43 turn it around and like you know hover
24:45 over it and like look at data points but
24:47 if I wanted to make this um available to
24:49 other people I would have to put it
24:51 somewhere and then I would probably have
24:52 to pay for it not only like short term
24:55 but like long term because this paper
24:57 you know this will be out for a couple
24:59 of years and people will still like want
25:01 to look at this figure and I think
25:03 there's no solution like I think the the
25:05 universities should provide like some
25:07 space or some
25:08 um
25:09 uh yeah provide this for for their for
25:12 their researchers basically
25:13 um yeah Google collab could be an
25:16 alternative
25:17 yeah yeah definitely but then like um
25:20 then you have to scroll down all the way
25:22 like to find this figure to yeah yes
25:26 it's not a paper right yeah it's not a
25:29 paper and like it's um the idea of this
25:31 reproducible paper would be that you
25:33 provide the data as well so you provide
25:35 the data you provide all the scripts and
25:37 people just click and then from the raw
25:39 data it runs through the analysis and it
25:42 gives you all the figures and like being
25:44 able to put that somewhere you know that
25:46 would be great
25:47 um so I could just say you know take
25:50 this and you just click a button and
25:52 like you know people wouldn't have to
25:53 run a Docker or whatever like they would
25:55 just click a button and it will all come
25:56 down and then the enact this video that
25:58 will be my that would be great
26:00 do you use do you use python yeah or do
26:05 you use R both both yeah I remember in
26:08 the river was a time when I also used R
26:11 was long ago but I remember that in our
26:15 studio there was a way to publish like
26:18 you write this in this R markdown right
26:20 and then we publish it to uh is it was
26:23 it called air pops something like that
26:25 yes it's still not interactive right
26:27 it is I have done that um I did it with
26:31 one figure but you can only so it
26:33 basically gets pushed to an instance or
26:35 something but then you can't you can
26:37 only run this instance for 25 hours per
26:40 month for free and then you have to see
26:43 it would be perfect it would be perfect
26:45 yeah because I had like and the other
26:47 thing is like um so also that's another
26:49 problem is of course like the data that
26:51 I'm using it's like Imaging data um it's
26:53 pretty big you know
26:56 um and like I I pushed it to this r
26:58 instead and this was just one little
26:59 brain figure that you could you know
27:01 rotate and it was like already yeah it's
27:03 a big figure and I was like okay this is
27:05 like one out of 15 that I have in my
27:08 paper it's like okay maybe not
27:13 um yeah yeah
27:15 see so tests then so the things we need
27:19 to bridge the gap between industry and
27:22 Academia at least start is researchers
27:25 need to learn how to write tests then we
27:29 need to have a way to
27:31 make papers reproducible so maybe there
27:33 should be a tool that is free for
27:34 Searchers yeah anything else
27:38 I guess like yeah the teaching of um
27:40 standard coding practices to all
27:43 academic Fields like there should be
27:45 like one I don't know introduction to
27:48 programming or statistics class for
27:49 everyone
27:51 um yeah because like stuff like you know
27:52 the proper modularization of code for
27:55 example
27:56 um uh how to write a package how to set
27:59 up an environment
28:01 um these type of things how to write a
28:04 requirement text file you know stuff
28:07 like very basic things I think that
28:08 would be good
28:10 um yeah
28:11 how how did you
28:14 learn these things
28:15 how did it happen to you
28:18 yeah I so I think my like I like I said
28:21 I was really already very early
28:23 interested in computer science as well
28:25 but I think what really brought me to
28:29 um like especially in this open science
28:31 open source field was um the brain hack
28:33 so that's basically it was actually the
28:35 pandemic so I don't know whether you
28:37 know but like in Australia we had like a
28:39 um massive lockdown like for eight
28:41 months you know we're not allowed to go
28:43 further more than five kilometers from
28:45 your house and like two hours outside
28:48 per day and stuff so it's very isolated
28:50 I don't have family here
28:52 um but then um so my field hosts this um
28:55 hackathon so like it's it's actually an
28:57 organization brain hack so it's about
29:00 um hackathon for like
29:01 Neuroscience basically and this is like
29:04 a complete Grassroots organization and
29:07 the way it works is like like a typical
29:08 hackathon so you basically you join and
29:11 either you pitch a project or you can
29:13 join a project
29:14 and um so I joined and I joined a
29:18 project
29:19 um I don't give an eye I don't remember
29:21 what it was about like um implementing a
29:24 canonical correlation in Python
29:26 something like that
29:28 um yeah and uh I really like the vibe
29:31 there we like the people so I decided to
29:35 um like right right around the the next
29:38 one was right around the corner so I
29:39 decided to help organizing it and that
29:42 really got me into this kind of open
29:44 science and open source uh because like
29:47 yeah then you get tasked with like how
29:49 to
29:50 um create the website for the new event
29:52 so like you go to GitHub and like you
29:54 um tweak the part like the current
29:56 website you know like a copy of the
29:57 current website and tweak it for the
29:59 next website so you learn about bit
30:00 about web development and then you see
30:02 what else is on GitHub and you talk to
30:04 people who have like all these skills
30:06 and they teach you and it's like um yeah
30:08 and then I also applied for so I was um
30:11 uh for one year I was the Secretary of a
30:14 global open science group I also uh
30:18 basically they were looking for people
30:19 to join them so that was also the brain
30:22 hack um and yeah so all this basically
30:24 this started like that and then I just
30:26 never stopped like I just you know like
30:29 joined community of the community and uh
30:32 yeah I like it a lot
30:34 so for you it was more like uh learning
30:37 by doing rather than
30:39 just attending a course that teaches you
30:42 everything that you need to know
30:44 yeah I think it was also then the other
30:46 thing I think I've mentioned that
30:48 already like a bit out of necessity so I
30:50 would have definitely I'm still I do
30:52 actually my um my computer science
30:54 degree at the University Hagen like
30:56 that's the one that sends you stuff you
30:58 know because here in Australia you
31:00 basically you pay for every course so I
31:02 I got a scholarship for my PhD
31:05 um and also like a living allowance but
31:07 if you want to sit another course you
31:08 pay for it and that's usually quite
31:10 awesome like compared like similar to
31:12 American like you know tuition fees so
31:15 it's impossible to just sit another
31:17 course here I would have done it of
31:19 course um but um yeah so you just have
31:22 to get by with what you find on the
31:24 internet which is actually a lot like um
31:26 where yeah you can totally have a
31:28 basically full computer science degree
31:30 you've just shown like you know an
31:32 equivalent just Strong's doing stuff on
31:34 the internet so um yeah you need to have
31:36 the discipline because uh in University
31:39 if you don't do the courses you don't
31:41 get credits and if you don't get credits
31:43 you don't get graduated right you don't
31:45 get it yeah but uh if you're just doing
31:49 this studying by yourself then you have
31:51 to have the discipline and you don't get
31:53 the credits right so you that's a
31:55 different kind of motivation I guess it
31:58 is yeah and then the other thing that I
31:59 then also started is like
32:02 um freelancing you know like um that
32:04 also puts a bit of pressure right like
32:06 if you get paid for doing stuff you
32:09 should basically better deliver at some
32:11 point yeah
32:13 um yeah
32:14 okay do you think is this is what he did
32:17 is the most effective way of picking up
32:19 these skills you know just starting
32:22 freelancing and then taking part in
32:23 hackathons and Learn by doing
32:25 or there are maybe better ways
32:28 researchers can learn these things
32:31 um
32:33 yeah I guess
32:36 and like if you are if you
32:38 something and if you are in a country
32:40 where it's easy just to sit another
32:42 course I would totally do that because
32:44 as you said it's like way more
32:46 structured
32:48 um you have like public peers that do
32:50 the same
32:51 um yeah I would totally do that
32:53 um apart from that
32:56 um I don't think it's the worst way like
32:59 definitely it's a lot of fun doing it
33:01 this way I would say yeah yeah
33:04 and I noticed that we have a question so
33:06 the question is does anyone revise your
33:10 code or do you work alone do you work
33:12 alone on the or there is somebody in
33:14 your team
33:15 um who you can discuss different things
33:19 that's a very good question and usually
33:21 in Academia sadly
33:24 um when you're not in a computer science
33:26 or like you know technical field lab
33:29 usually you work alone yeah so I had
33:32 um I have a supervisor
33:35 um not the one that I have here but like
33:37 another one who is um really technically
33:39 skilled so he basically
33:41 um he has developed this idea about the
33:45 type of model that I use in the brain so
33:47 he could help me like but he's in the
33:49 Netherlands
33:50 um but yeah usually you work you work
33:53 alone which makes it more even more
33:56 necessary that you put your code on
33:58 GitHub you know so that someone can
34:01 actually have a look at it
34:02 um yeah yeah
34:05 and other you said you're a part of many
34:07 communities so I imagine that there are
34:09 communities where people who also care
34:12 about this topic if you work alone then
34:15 you can put some code
34:17 to GitHub and then perhaps ask other
34:19 researchers from these communities to
34:21 take a look does it does it happen
34:23 yes it does happen and especially it
34:26 happens especially when you publish your
34:28 code with paper
34:29 because yeah I get like requests from
34:33 people that read my paper and they say
34:34 like look um your code I don't
34:37 understand this part can you can you
34:39 explain and then you say like oh yeah I
34:41 understand why you don't understand
34:42 because it maybe it wasn't explained
34:44 that well you know in my report so yeah
34:47 yeah
34:49 but it means that the it adds a lot of
34:52 work on top of what you do right so then
34:54 you in a typical scenario you publish a
34:58 paper you go to a conference you talk
35:00 about this paper or maybe you have a
35:02 poster session right and then it's two
35:04 days and then maybe you get a few emails
35:06 you answer to this emails and then you
35:09 focus on the next paper but here you get
35:12 the
35:13 comments okay I don't understand your
35:16 code
35:16 and
35:18 I can just add a lot more stuff on your
35:22 plate right yeah it does yeah
35:25 um and it's definitely
35:27 often driven by a lot of idealism and
35:30 like you know trying to like science
35:33 better I would say
35:34 um I mean it's kind of the entire field
35:37 of Academia is probably populated by
35:38 people who don't do things just for
35:42 the money and effectivity Effectiveness
35:44 because then they would move to Industry
35:46 where they get would get paid way more
35:49 for you know what they're doing I think
35:52 that's just the case yeah yeah
35:54 okay so you just know that it will take
35:58 more effort
35:59 and you know that this is for the
36:01 greater good so you're willing to put
36:03 more time into this yeah and I mean like
36:06 yeah I
36:10 think I like collaborating with people
36:12 often it's also it's quite good you know
36:14 they give you new ideas on new insights
36:16 or they think like oh is that is in your
36:19 code and I thought it would be nice to
36:21 extend it by this what do you think
36:23 about this can be collaborated like it
36:24 can it can also like help you in many
36:27 ways and there's definitely studies that
36:28 show that if you publish your code
36:30 there's this really cool web page like
36:32 um papers with code basically um that
36:35 have like it's a collection of papers
36:37 that where the code is shared shows that
36:40 um like these kind of papers they get
36:41 more citations they get more recognition
36:44 so it definitely helps you
36:46 um and also of course it helps you you
36:48 know if you want to go into a more like
36:51 um software engineering Direction
36:52 further on it of course also helps you
36:55 if you have like
36:56 repositories that you can share and show
36:59 showcase yeah
37:01 yeah I see that there is a comment that
37:04 I asked a researcher about his code and
37:06 he never replied and the code was buggy
37:08 so do you think it happens often these
37:12 situations yeah it does well at least
37:14 there's code right which is already
37:17 a good thing yeah it gets even like it
37:20 gets even funnier so there's also this
37:22 there was this thread on GitHub where
37:24 just like for experimental experiment
37:26 purposes like this one researcher and
37:29 usually like people add to their
37:31 manuscripts like data can be obtained
37:33 upon request so they um like they asked
37:36 250 researchers who had put this
37:38 statement under that paper for the data
37:40 and it like they showcase basically the
37:42 answers and the replies to you know this
37:45 kind of request and like a couple of
37:47 them like provided the data and for
37:49 others it was like yeah and the data
37:52 left our lab with the last PhD student
37:54 or like we couldn't we couldn't couldn't
37:56 find the data anymore you know so I'm
37:59 just didn't reply like it's really it's
38:01 it's a bit ridiculous well that's yeah
38:04 that's the current state yeah yeah
38:07 but I guess there are conferences where
38:10 you have to provide code and data in
38:13 order to publish their conferences and
38:15 journals right yes it's getting actually
38:18 um if you want to apply for Grants it's
38:20 usually that's kind of um a requirement
38:23 that you um you adhere to open science
38:25 principles also like many many journals
38:28 actually they ask for both the code and
38:29 the data
38:31 um so like yeah it's it's coming because
38:33 people are recognizing the issues in the
38:36 field and it's you know it's not yeah
38:37 it's not it's not a good stage right
38:39 like it's it's it kind of con it's what
38:41 contributed to this um open science and
38:44 representability crisis so
38:46 um yeah
38:47 this is okay
38:50 um maybe you can tell us a few examples
38:53 of projects where you worked on and how
38:57 adding this engineering practice is
38:59 helped because from what I understood
39:00 you didn't start as a research software
39:03 engineer you started like as a usual PhD
39:05 student but you had this interest in
39:09 in open science open source computer
39:13 science so maybe you can tell us about
39:15 one of the projects that you did in menu
39:17 how you realize that you need to start
39:20 dating these things and how it looked
39:22 like so what did you add first what did
39:24 you add second and so on and how it
39:26 helped you at the end yeah so I think
39:29 like um a good example is my my current
39:32 and like my oldest PhD project which is
39:36 like about the normative model of the
39:38 the brain basically so I'm working on a
39:40 very big um depression data set it's
39:43 massive like for for clinical standards
39:47 um and um so I started and like I I went
39:51 in and I didn't really I didn't really
39:53 know like my first issue was like how
39:55 should I organize this like the folder
39:57 structure so like I found for example
39:59 cookie cutter which is kind of a
40:01 repository they have like examples for
40:03 the structures for different fields so
40:05 like I can go there and it creates one
40:07 so that was very helpful so you do that
40:09 and then like yes and create an
40:12 environment for example for your uh for
40:14 your code um that helps
40:16 um then of course like it um if you if
40:20 you push stuff on kids and there's also
40:21 actually a principle that I learned so
40:22 you have at least two branches one is
40:25 like a main branch the other one is a
40:26 death branch and you never push like new
40:29 stuff to the main branch but yeah you
40:30 know you push it to the left front it's
40:32 just like very simple things
40:34 um and what else did I do like um
40:37 uh yeah then code formatting standards
40:40 so like of course there are tools that
40:42 do that um in R you can just click like
40:44 format my code but there's like flake um
40:47 Black age and um I think black is the
40:50 one in Python where you can
40:52 um that you can use
40:54 um uh what else then yeah like Version
40:56 Control like for example like yeah for
40:58 your models ammo flow and then of course
41:01 like also like just reading reading a
41:03 lot of
41:04 um good code
41:07 um can also have
41:09 yeah I think
41:11 what else did I do
41:14 um
41:18 yeah I I also have to say like I really
41:21 at the beginning
41:22 um
41:24 um
41:25 I
41:27 probably deleted my on my experience
41:30 um and redid them from scratch like
41:32 three times
41:34 it was just so messy yeah but that's
41:37 that's just yeah how it is
41:39 um but in the end yeah I know I'm now
41:41 I'm kind of at a stage where and I start
41:43 like a project I know what to do I know
41:45 how to set it up I know
41:47 um how to keep things clean and like
41:49 yeah yeah getting there yeah so you
41:52 didn't start with you didn't start this
41:54 project knowing that you need to add all
41:57 these best practices right so for you
41:59 you realize it while working on the
42:02 project like one when you I guess
42:04 deleted your experiments for the first
42:06 time
42:06 you thought okay like how do I make sure
42:09 that it doesn't happen yeah yeah yeah so
42:12 it was definitely a learning process
42:14 um yeah but yeah like I said it's kind
42:16 of just Academia where you figure things
42:19 out yeah yeah
42:21 I remember from my master thesis I don't
42:24 know how representative it is but my uh
42:28 usually the way I organize Explorer
42:30 exploratory data analysis for many
42:33 Adcock tasks is quite messy like I have
42:35 a ton of notebooks they're
42:38 um they have very cryptic names and then
42:42 I know that I need to push them to git
42:44 but uh they like sometimes there are
42:47 tokens some sensitive information that I
42:50 don't want to push I need to clean them
42:51 and then so they stay without being on
42:55 being pushed to git and then something
42:57 happens like the file gets corrupted for
43:00 whatever reasons and then the notebook
43:02 is lost uh yeah terrible so I guess you
43:05 had to uh to solve this right and then
43:08 this is how you discovered all this best
43:11 practices
43:12 yeah so um it's also like usually in
43:15 Academia often like at least in my field
43:17 like you have data that is sensitive so
43:19 you just can't put any data to like any
43:22 yeah open repository here
43:25 so but you can like stay you put put
43:27 like um
43:28 like metadata you know like or like
43:30 parameters that from your models that
43:32 you fitted you know they are quite
43:34 yeah they are not very they're
43:36 non-specific right like any whatever
43:38 mean or whatever yeah yeah for your
43:41 project you you mentioned that the data
43:43 is about depression which can be quite
43:45 sensitive right so you cannot can you
43:47 publish this data or you cannot no so
43:50 the data it's I mean the the data is
43:53 former um Consortium
43:55 um that you can you can get access to
43:57 the to the data if you write a proposal
44:00 but no I wouldn't be able to publish the
44:02 data no
44:04 and if you need to submit
44:06 um
44:07 paper based on this data somewhere to
44:10 open science conference how do you do
44:12 this
44:12 yeah I mean you present like you can
44:15 present like figures you know like I
44:17 said you can present the mean of
44:18 whatever that so my my research is about
44:22 the thickness of the cortex so that's
44:24 what I focus on like whether the the
44:27 thickness of the cortex is like
44:29 um smaller in people with depression or
44:31 not so you can provide like a mean or
44:34 like you can you can also you know
44:35 provide like uh the um how do you say
44:39 de-identified data you know people yeah
44:42 it's just some some depressed brain that
44:46 you talk about you know like of course
44:47 no personal data but I even I don't have
44:50 that data you know I don't have this
44:51 information
44:52 um but still um you wouldn't like
44:55 publish the whole I mean there are some
44:58 data it's definitely about this but like
44:59 for my for my data it's it's part of
45:01 this Consortium and you need to write a
45:03 proposal so not everybody can have this
45:04 data yeah
45:06 yeah interesting but when it comes to
45:11 healthcare data it's always tricky right
45:13 yeah so the results you always need to
45:16 have to take extra care
45:18 when you deal with this data
45:22 okay
45:24 um and from what you said it looked like
45:27 the easiest way to get the skills is to
45:29 take part in hackathons he contribute to
45:33 open source and also freelance
45:35 right and um yeah how often do you
45:39 actually do these things
45:42 um at the moment so
45:44 um less often than I would like to
45:46 because I work basically full time
45:48 already as a research fellow I try to
45:51 finish my PhD like in the hours before
45:54 and after that during the day
45:57 um and uh yeah but like as I
46:01 I just recently contributed to a code
46:04 Sprint of this kind of touringway
46:06 repository
46:07 um that I it's just like very it's a
46:09 very nice community and that's the good
46:10 thing about living in Australia is like
46:12 all stuff that happens during the day in
46:15 Europe it happens like during the
46:16 evening here so like you know you can do
46:18 stuff after work
46:20 um so I think like um
46:23 like at least
46:25 once or twice per month usually like
46:28 yeah there's just a lot of things that I
46:31 that I contribute to for like that I
46:33 yeah I'm almost daily on git like just
46:35 looking for new stuff
46:38 um
46:39 and uh yeah I'm in a lot of communities
46:41 where they also always bring up new
46:43 stuff or like things that yeah you can
46:46 contribute to or like you know where
46:48 they look for people to give a talk or
46:50 like
46:51 um yeah yeah yeah
46:54 so you made it a part of your daily
46:56 routine check in GitHub yeah yeah I
47:00 checked the I checked the trending
47:02 repositories and I checked the like I
47:05 love the awesome list like I love them
47:07 yeah
47:09 um yeah yeah I think when I asked you
47:11 how did you find out about the data docs
47:14 Club Community you said you found
47:17 a trend in GitHub repo right it was from
47:21 our course right yeah it was from the
47:23 course yeah I think it was the um the ml
47:25 soon Camp yeah yeah probably I'm a
47:28 lobster Zoom Camp right the one yeah
47:29 yeah that was the one yeah cool so
47:33 actually there are people who check
47:35 trending
47:37 yes yeah me
47:42 so instead of checking Twitter or
47:44 LinkedIn or like this is that two social
47:47 networks I check
47:49 you come from work or maybe at the
47:51 beginning of your working day you go to
47:54 git and you check the trending that was
47:57 um no I have the GitHub app and they
48:00 also like I have it on my phone and I
48:02 also check actually I check um Twitter
48:04 LinkedIn Mastodon
48:07 black
48:09 um I think that is my and GitHub yeah
48:13 and what kind of communities are you
48:15 part of
48:17 um so one of them is the carpentries
48:20 that I already told you like this
48:21 software teaching program then the
48:24 research software engineering
48:26 communities we have an Australian
48:29 chapter but there's also a global
48:30 chapter and like basically there's also
48:32 German chapter in the um UK chapter my
48:36 open science Community
48:38 um datash.club of course
48:41 and then there's another podcast like I
48:45 think it's called mlops but because I'm
48:47 also now but I'm not really I'm not very
48:49 active in that one kaggle
48:51 um that's also one
48:53 um they also have like a I think a very
48:55 inofficial slack channels or something
48:58 like that right yes yeah
49:01 um what else then I like just a couple
49:03 of um
49:05 more like sciency
49:07 um uh
49:09 slack channels so for example I do I
49:11 work on physiological noise correction
49:13 for fmri so we have like a selectional
49:16 there
49:17 um then my teaching my teaching course
49:21 yeah
49:22 um
49:23 and then the Allen touring Institute
49:25 that's also that's also a really good
49:27 one yeah
49:28 that's quite a lot of
49:30 different things
49:31 yeah oh yeah and then the other one is
49:33 like the the one where I worked for NASA
49:35 so I developed um a curriculum on open
49:38 science for NASA and we have like also
49:42 um a slack Channel where we continue
49:44 this work yeah so let's say in one of
49:47 these communities or in GitHub trending
49:49 you come across a git repo that is
49:52 interesting for you
49:54 why don't you want to contribute what
49:56 happens next
49:59 um so yeah usually
50:04 usually Beijing
50:06 um then it depends kind of how big the
50:08 Ripple is so like if it's like a smaller
50:10 repo it usually like you know it can be
50:13 like a rapper where they it's like
50:14 really with like structured in releases
50:17 um then it's usually quite well
50:19 organized but also quite big and smaller
50:21 wrappers I always look at the death
50:24 Branch because that's usually where the
50:26 you know the more interesting stuff
50:28 happens
50:29 um then I um
50:32 I would probably
50:34 look at documentation that they have
50:35 like often like um so I've like one of
50:38 the reports that I'm kind of preparing
50:40 to contribute to at the moment is kick
50:42 it learn
50:43 um and they have a really nice
50:45 um yeah intro intro for new developers
50:48 so basically they got you they also show
50:50 you know you know what coding principles
50:52 you should adhere to
50:54 um how to format your code like what
50:56 tests to run
50:57 um stuff like that so I would look at
50:59 that and then of course you look at the
51:00 issues you know you look at stuff that
51:02 is needs to be done and and and download
51:05 the repo and like look look whether you
51:07 can give this a fix
51:10 um it's also always good to actually
51:11 talk to the people so um you know if you
51:14 see someone like that has who's opened
51:17 an issue you can just talk to them
51:18 saying like so what did you think about
51:20 this like how should we approach this I
51:22 would be really interested like are you
51:24 already working on this I mean git is a
51:26 very collaborative tool right like it's
51:27 it's made to get in touch with people
51:31 yeah
51:33 yeah
51:33 and it seems this uh documentation from
51:36 Psychic learn is helpful in general not
51:40 just for contributing to secular right
51:42 yeah yeah yeah it's very helpful um but
51:45 also they have like a really nice they
51:46 have a section like that kind of
51:49 um guides new developers so like really
51:51 how they want to contribute contribute
51:53 contributions to look like so yeah yeah
51:56 do you have your own open source
51:58 projects
52:01 um so I have my paper that I published
52:03 and I'm just I'm just
52:05 um about to launch a Blog actually
52:08 um where I'm going to write about open
52:10 science
52:12 things and of course like yeah it's a
52:14 GitHub repository probably
52:17 um that's easiest way to start a vlog
52:19 these days right exactly because it's
52:22 free exactly
52:24 um yeah so yeah
52:27 um apart from that like yeah like I said
52:29 at the moment a lot of my time has
52:30 actually spent on my work
52:33 um and that I mean that's the good thing
52:35 about Academia is that you really
52:37 you work on stuff that is very easily
52:41 converted into an open science project
52:44 you know it's meant to be this way like
52:46 it's a good thing if you do this if you
52:48 add open science on top of it like if
52:50 you do an analysis for paper and then
52:52 you if you then go to your professor or
52:54 whatever and say like I would really
52:55 like to put this code at GitHub you know
52:58 we would make sure that it's you know
53:00 all like uh sensitive information is
53:03 removed like would you would you mind
53:05 that they probably wouldn't say no like
53:06 you know if you just say I do this I
53:08 take care of this they wouldn't say no
53:09 so um yes it's I think it's quite easy
53:12 and I think that Academia is also really
53:13 nice because it provides you with a very
53:15 structured approach to projects like I
53:18 I've heard like for many people in the
53:21 street it's quite hard to have like a
53:22 portfolio or something you know projects
53:23 that you can showcase like I think
53:25 Academia works this in this way you
53:27 start with some data you
53:29 do something about it you publish it
53:31 yeah yeah
53:33 and I guess in Academia the reason you
53:36 are in Academia the reason people are in
53:38 Academia is to do research and then
53:41 share it with the world yeah so there is
53:44 no reason a professor would say no you
53:47 shouldn't publish the code because
53:49 that's the reason you are in Academia is
53:51 to share what you do with the rest of
53:53 the world while in Industry there could
53:56 be things like okay like it's actually
53:59 giving us a Competitive Edge we don't
54:00 want to share it because our competitors
54:03 will take our code and use it and get
54:06 more money than we right in Academia it
54:08 doesn't exist Does it
54:10 yeah that I just wanted to shouldn't
54:13 like uh they're definitely arguments
54:16 when people say you know if I put this
54:18 on GitHub I get scooped
54:20 um yeah but I haven't EX no I shouldn't
54:23 say I haven't experienced that from
54:25 people in Academia what I have
54:26 experienced is like I worked at a
54:28 startup where like indeed I was asked
54:32 whether I could just use some code from
54:35 one of my supervisors and I said like no
54:37 it's like it's like um I mean it's a
54:39 no-brainer because this code is a not
54:41 mine and B under like license that
54:45 wouldn't allow this you know it's
54:46 absolute no-brainer but then this person
54:48 just said like yeah you know this
54:49 happens all the time we just rewrite it
54:50 and you know different language or like
54:53 you know nobody and I said no no
54:56 um yeah it shouldn't happen but it's
54:58 it's a danger but like I think it's more
55:00 it's really like more on the this is
55:02 like
55:03 um not there not the um rule like people
55:06 usually people are like they would
55:09 rather approach you to collaborate I
55:10 think yeah see yeah
55:14 other so it seems like it's a new topic
55:17 but there are already courses uh like
55:20 even open science and uh research
55:22 software engineering
55:23 uh are there already books about this
55:27 topic that you can recommend
55:30 um books not yet I'm actually I'm
55:33 thinking about writing one
55:35 okay you know um but like yeah
55:37 definitely the island touring
55:39 um book is about open science
55:42 um and what else there are definitely
55:44 papers
55:45 um like a couple of papers um about it
55:50 um
55:51 yeah I think um that's it mostly yeah
55:56 yeah is there something you would
55:58 recommend anyways like maybe not related
56:01 to
56:03 uh this particular topic but in general
56:06 maybe you have any good book
56:07 recommendations or other resource
56:09 recommendations yeah it's very funny
56:11 because I of course knew this question
56:13 would come because I was the one who
56:15 like suggested to have this question
56:17 yeah so um what I also do is I'm in a uh
56:22 I forgot forgot one um social media like
56:25 um Discord I mean a Discord channel from
56:28 pact the publisher and they sometimes
56:31 give
56:32 um like uh books that are not about to
56:34 be published to people to read it um so
56:37 I kind of I'm part of this Channel and
56:39 like one of them is the
56:42 um machine learning Solutions architect
56:44 handbook that I just I I was one of the
56:46 people who read this book it's really
56:48 good it's pretty comprehensive like I
56:50 think like 800 pages and but it also has
56:52 like Hands-On exercises which I really
56:55 like after each chapter
56:58 um and yeah I would recommend that I
57:00 think
57:01 um yeah I really like to cook
57:03 800 pages
57:05 yeah it's pretty it's pretty cool
57:07 yeah it's pretty comprehensive yeah it's
57:11 pretty big
57:12 yeah I got the e-book of course like the
57:14 e-version so
57:15 yeah so what is it what does the table
57:17 of contents look like there what do what
57:19 are the topics they cover
57:21 so yeah everything about machine
57:23 learning but then also like how to set
57:25 it up on AWS and um yeah uh yeah it's
57:29 pretty good book
57:30 um I had one month I actually didn't
57:32 read all of it I still need to go
57:33 through the rest because it was just so
57:35 much yeah Pages
57:38 yeah I recommended it publication though
57:41 business use cases for machine learning
57:44 the science tools and infrastructure
57:46 platform for ML ml algorithms data
57:49 management open source machine learning
57:51 libraries kubernetes yeah quite and I'm
57:55 just I'm just starting like there's
57:58 there's so much much stuff yeah it's
58:00 really big yeah yeah
58:03 okay
58:04 um did I forget to ask you anything that
58:08 he wanted to talk about
58:12 we covered everything right camera
58:14 everything yeah and like uh yeah I was
58:16 really really cool um the time flew by
58:18 like really really interesting he did
58:20 yes I hope you cat enjoyed this yeah I
58:25 think she went she always leaves in my
58:27 cupboard I think she went back to sleep
58:30 I think she had some like running around
58:32 like in the background in the middle
58:36 thanks for joining us today that was fun
58:39 talking to you yeah um yeah it seemed
58:42 like you enjoyed it that's good yeah
58:44 yeah it was really interesting yeah yeah
58:46 so you said you will not uh listen to
58:49 this when it's published oh well we'll
58:53 see
58:53 there will be a transcript you can just
58:55 read but yeah I can just read what I and
58:58 then like thinking oh did I really say
58:59 this
59:01 yeah so thanks for joining us today
59:04 thanks everyone also for joining us
59:06 today
59:07 um for asking well we got one question
59:09 in a few comments so thanks for being
59:11 active I know it's pretty early yeah
59:13 time yeah have a great weekend everyone
59:17 thank you
59:18 bye